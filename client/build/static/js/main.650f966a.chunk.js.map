{"version":3,"sources":["serviceWorker.js","characterSheet/attributeBox.js","characterSheet/characterSheetHeader.js","characterSheet/secondarySkillItem.js","characterSheet/skillBox.js","characterSheet/characterSheet.js","documentation/sideBar.js","documentation/coreRules.js","dataDisplay/dataDisplayTitleSection.js","dataDisplay/dataDisplayFilterField.js","dataDisplay/dataDisplayFilterSection.js","dataDisplay/dataDisplayListItem.js","dataDisplay/dataDisplayListSection.js","dataDisplay/dataDisplay.js","dataDisplay/skillChecks.js","dataDisplay/combatActions.js","dataDisplay/strains.js","dataDisplay/traits.js","routes.js","header/header.js","topNav/navLink.js","topNav/chapterList.js","topNav/toolButton.js","topNav/rulesTools.js","topNav/extendedNav.js","topNav/topNav.js","stores/rulesStore.js","stores/combatActionsStore.js","stores/skillChecksStore.js","stores/strainsStore.js","stores/traitsStore.js","stores/rootStore.js","index.js"],"names":["Boolean","window","location","hostname","match","AttributeBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","modifier","concat","react_default","a","createElement","className","name","Component","CharacterSheetHeader","SecondarySkillItem","type","placeholder","SkillBox","secondarySkillsDiv","index","secondarySkillCount","push","secondarySkillItem","key","CharacterSheet","characterSheetHeader","attributeBox","skillBox","SideBar","style","marginTop","CoreRules","inject","observer","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","renderedDoc","pathname","toLowerCase","slice","rootStore","rulesStore","rawDocs","inherits","createClass","sideBar","dangerouslySetInnerHTML","__html","withRouter","DataDisplayTitleSection","react_router_dom","to","rulesLink","DataDisplayFilterField","field","_ref","selectCheckmark","filters","sort","some","elm","_this2","fieldsList","fields","filter","item","options","map","onChange","ev","changeFilter","checked","shouldBeChecked","divCount","Math","ceil","divCountLength","optionDivs","i","width","minWidth","splice","padding","paddingLeft","DataDisplayFilterSection","searchedName","setState","updateFilters","_this3","data","array","keys","forEach","indexOf","unshift","_this4","_this5","filterableFields","filterFields","dataDisplayFilterField","getFields","nameSingular","target","onClick","resetFilters","DataDisplayListItem","toggleExpanded","expandInPlace","expanded","renderSelected","expandedClass","plusMinus","faMinus","faPlus","expandedContent","renderedContent","description","display","displayString","isArray","join","displayName","index_es","icon","DataDisplayListSection","sortBy","sortAssending","displayDocumentation","nextprops","nextstate","b","fieldA","toString","fieldB","stringA","stringB","placeholderA","list","itemKey","filterName","includes","_loop","v","_ret","extension","documentationExtension","faSort","headerRow","displayClass","listHtml","applyFilters","sorter","dataKey","dataDisplayListItem","renderedDisplay","DataDisplay","dataDisplayTitleSection","namePlural","dataDisplayFilterSection","dataDisplayListSection","sortableFields","SkillChecks","skillChecksStore","skillChecks","dataDisplay_dataDisplay","CombatActions","combatActionsStore","combatActions","Strains","strainsStore","strains","Traits","traitsStore","traits","Routes","id","react_router","path","component","Header","NavLink","link","title","split","word","charAt","toUpperCase","onMouseOver","onHover","onMouseOut","ChapterList","numberOfChapters","chapterList","chapterNumberCutOff","round","chaptersFirstHalf","chaptersSecondHalf","returnValue","ToolButton","console","log","RulesTools","toolButton","ExtendedNav","hoveredClass","hoverDisplay","rulesTools","TopNav","hovering","setHoverDisplay","setTimeout","navLink","extendedNav","decorate","RulesStore","test","callDocumentationAPI","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","DOCUMENTATION","parseChapters","stop","documention","observable","CombatActionsStore","SkillChecksStore","RootStore","StrainsStore","TraitsStore","ReactDOM","render","index_module","basename","header_header","topNav_topNav","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0GCWSC,qBA1Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAKV,IACFQ,EAASL,KAAKJ,MAAdS,MAOL,OALIL,KAAKJ,MAAMU,WACGD,EAAZA,GAAS,EAAQ,IAAAE,OAAOF,GAClB,GAAAE,OAAMF,IAIhBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,UAAKV,KAAKJ,MAAMgB,OAElBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAd,kBApBiBE,cCgBZC,cAfb,SAAAA,EAAYlB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IACjBjB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgB,GAAAX,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAOjB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,2BAV2BG,aCqBpBE,cApBb,SAAAA,EAAYnB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACjBlB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAOjB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4FACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAAhB,cAIFH,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOC,YAAY,iBAfNJ,aCiClBK,cA9Bb,SAAAA,EAAYtB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACjBrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAQjB,IADA,IAAMsB,EAAqB,GAClBC,EAAQ,EAAGA,EAAQpB,KAAKJ,MAAMyB,oBAAqBD,IAC1DD,EAAmBG,KAAKd,EAAAC,EAAAC,cAACa,EAAD,CAAoBC,IAAKJ,KAGnD,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0FACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAAhB,eAIFH,EAAAC,EAAAC,cAAA,SAAOM,KAAK,OAAOC,YAAY,UAEhCE,WAxBYN,aCgLRY,cA5Kb,SAAAA,EAAY7B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,IACjB5B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2B,GAAAtB,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,wEAMjB,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAIbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAIbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,OAAOP,MAAO,EAAGC,UAAU,IAC9CE,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,WAAWP,MAAO,EAAGC,UAAU,IAClDE,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,aAAaP,MAAO,EAAGC,UAAU,IACpDE,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,OAAOP,OAAQ,EAAGC,UAAU,IAE/CE,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,QAAQP,MAAO,IAClCG,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,OAAOP,MAAO,EAAGC,UAAU,IAC9CE,EAAAC,EAAAC,cAACiB,EAAD,CAAcf,KAAK,QAAQP,MAAO,EAAGC,UAAU,MAMnDE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wCAAd,WAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,QADF,IAKEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,QALF,OAYJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kDAAd,gBAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,UAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,aAMpBR,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,IAC/Bb,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,KAKjCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wCAAd,WAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,OADF,IAKEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,OALF,IAMGH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,OANH,MAUFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wFAAd,cAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,YAKRH,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,IAC/Bb,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,IAC/Bb,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,KAKjCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wCAAd,UAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,QADF,IAGEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAhB,WAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,cAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,cAEdR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,gBAKlBR,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,IAC/Bb,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,IAC/Bb,EAAAC,EAAAC,cAACkB,EAAD,CAAUP,oBAAqB,OAIrCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAtKIE,aCSdgB,0LAXP,OACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAa,QAC1BvB,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,0CAPUG,qBCMhBmB,EAAYC,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAAH,IAAA,IAAAI,EAAAvC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAA,QAAAK,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAA7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,MAAAoC,EAAAtC,OAAAI,EAAA,EAAAJ,CAAAkC,IAAA7B,KAAAwC,MAAAP,EAAA,CAAApC,MAAAO,OAAAiC,MAI1CI,YAAc,WAEV,IAAIpD,EAAWK,EAAKD,MAAMJ,SAASqD,SAASC,cAAcC,MAAM,GAIhE,MAF2B,MAAvBvD,EAASuD,OAAO,KAAYvD,EAAWA,EAASuD,MAAM,GAAI,IAEvDlD,EAAKD,MAAMoD,UAAUC,WAAWC,QAAQ1D,IAVTK,EAAA,OAAAC,OAAAqD,EAAA,EAAArD,CAAAkC,EAAAG,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAkC,EAAA,EAAAR,IAAA,SAAAnB,MAAA,WActC,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY2C,wBAAyB,CAACC,OAAQvD,KAAK4C,sBAjBpCZ,EAAA,CACtBnB,eAuBT2C,cAAWxB,GCfXyB,0LAXP,OACIjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBX,KAAKJ,MAAMgB,MAC/CJ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAI3D,KAAKJ,MAAMgE,UAAWjD,UAAU,wBACtCH,EAAAC,EAAAC,cAAA,UAAKV,KAAKJ,MAAMgB,KAAhB,mBAPkBC,cCmDvBgD,cAnDX,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACfhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,+EAOG,IAARiE,EAAQC,EAARD,MACV9D,KAAKJ,MAAMoE,gBAAgBF,2CAGfA,GACZ,IAAIG,EAAUjE,KAAKJ,MAAMqE,QACzB,QAAKA,EAAQjE,KAAKJ,MAAMsE,SACnBD,EAAQjE,KAAKJ,MAAMsE,MAAMC,KAAK,SAAAC,GAAG,OAAIA,IAAQN,qCAI7C,IAAAO,EAAArE,KACDsE,EAActE,KAAKJ,MAAM2E,OAAevE,KAAKJ,MAAM2E,OAAOC,OAAO,SAAAC,GAAI,QAAMA,IAAMP,OAA/C,GAElCQ,EAAWJ,EACXA,EAAWK,IAAI,SAACb,EAAO1C,GACnB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKc,IAAKJ,GAAOZ,EAAAC,EAAAC,cAAA,SAAOM,KAAK,WAAWX,MAAOyD,EAAOc,SAAU,SAAAC,GAAE,OAAIR,EAAKS,aAAa,CAAChB,WAASiB,QAASV,EAAKW,gBAAgBlB,KAAUA,EAAMtD,EAAAC,EAAAC,cAAA,cAFnI,GAMxBuE,EAAWC,KAAKC,KAAKT,EAAQnC,OAAS,GACtC0C,EAAW,IAAGA,EAAW,GAI7B,IAHA,IAAIG,EAAiBF,KAAKC,KAAKT,EAAQnC,OAAO0C,GAE1CI,EAAa,GACRC,EAAI,EAAGA,EAAIL,EAAUK,IAC1BD,EAAW/D,KAAKd,EAAAC,EAAAC,cAAA,OAAKc,IAAK8D,EAAGxD,MAAO,CAACyD,MAAK,eAAAhF,OAAiB0E,EAAjB,KAA8BO,SAAQ,gBAC3Ed,EAAQe,OAAO,EAAGL,KAI3B,IAAIM,GAAW,GAAKT,EAAW,EAAIA,GAAY,EAC/C,OACIzE,EAAAC,EAAAC,cAAA,OACIC,UAAU,gCACVmB,MAAO,CAACyD,MAAOvF,KAAKJ,MAAM2F,MAAOC,SAAQ,gBAEzChF,EAAAC,EAAAC,cAAA,MAAIoB,MAAO,CAAC6D,YAAW,cAAApF,OAAgBmF,EAAhB,UAAiC1F,KAAKJ,MAAMgB,MACnEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBmB,MAAO,CAAC6D,YAAW,cAAApF,OAAgBmF,EAAhB,UAAiCL,WA9CrExE,aCgGlB+E,cA9Ff,SAAAA,EAAYhG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACf/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,KAAMJ,KACDQ,MAAQ,CACTyF,aAAc,GACd5B,QAAS,IAJEpE,wEAQVQ,GAAO,IAAAgE,EAAArE,KACZA,KAAK8F,SAAS,CAACD,aAAcxF,GAAQ,kBAAMgE,EAAKzE,MAAMmG,cAAc1B,EAAKjE,MAAMyF,uDAGpE,IAAAG,EAAAhG,KACXA,KAAK8F,SAAS,CAACD,aAAc,GAAI5B,QAAS,IAAK,WAC3C+B,EAAKpG,MAAMmG,cAAcC,EAAK5F,MAAMyF,cACpCG,EAAKpG,MAAMmG,cAAcC,EAAK5F,MAAM6D,6CAIlCH,GACN,IAAImC,EAAOjG,KAAKJ,MAAMqG,KAClBC,EAAQ,GACRD,GACWnG,OAAOqG,KAAKF,GAClBG,QAAQ,SAAA5E,GACT,GAAIyE,EAAKzE,GAAKsC,IAAUmC,EAAKzE,GAAKsC,GAAOvB,OACL,kBAArB0D,EAAKzE,GAAKsC,KAAqBmC,EAAKzE,GAAKsC,GAAS,CAACmC,EAAKzE,GAAKsC,KAExEmC,EAAKzE,GAAKsC,GAAOsC,QAAQ,SAAA3B,IACQ,IAAzByB,EAAMG,QAAQ5B,IAClByB,EAAM5E,KAAKmD,SAGd,CACD,IAA+B,IAA3ByB,EAAMG,QAAQ,QAAgB,OAClCH,EAAMI,QAAQ,WAI1B,OAAOJ,0CAGKtF,EAAMkD,GAAO,IAAAyC,EAAAvG,KACrBiE,EAAUjE,KAAKI,MAAM6D,QACpBA,EAAQH,KAAQG,EAAQH,GAAS,KACA,IAAlCG,EAAQH,GAAOuC,QAAQzF,GAAcqD,EAAQH,GAAOxC,KAAKV,GACxDqD,EAAQH,GAAO2B,OAAOxB,EAAQH,GAAOuC,QAAQzF,GAAO,GACzDZ,KAAK8F,SAAS,CAAC7B,QAASA,GAAU,kBAAMsC,EAAK3G,MAAMmG,cAAcQ,EAAKnG,MAAM6D,4CAGvE,IAAAuC,EAAAxG,KACDuF,EAAQ,GAAKvF,KAAKJ,MAAM6G,iBAAiBlE,OACzCmE,EAAe1G,KAAKJ,MAAM6G,iBAAiB9B,IAAI,SAAAb,GAC/C,OAAQtD,EAAAC,EAAAC,cAACiG,EAAD,CACJpB,MAAK,GAAAhF,OAAKgF,EAAL,KACL/D,IAAKsC,EAAMlD,KACXA,KAAMkD,EAAMlD,KACZsD,KAAMJ,EAAMI,KACZK,OAAQiC,EAAKI,UAAU9C,EAAMI,MAC7BD,QAASuC,EAAKpG,MAAM6D,QACpBD,gBAAiB,SAAAa,GAAE,OAAI2B,EAAKxC,gBAAgBa,EAAIf,EAAMI,WAM1D,OACI1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,4BACVmB,MAAO,CAACyD,MAAK,QAEb/E,EAAAC,EAAAC,cAAA,UAAKV,KAAKJ,MAAMiH,aAAhB,SACArG,EAAAC,EAAAC,cAAA,SACIC,UAAU,mCACVK,KAAM,OACNC,YAAa,mBACbZ,MAAOL,KAAKI,MAAMyF,aAClBjB,SAAU,SAAAC,GAAE,OAAI2B,EAAK5B,SAASC,EAAGiC,OAAOzG,UAE5CG,EAAAC,EAAAC,cAAA,MACIC,UAAU,uBACVoG,QAAS,SAAAlC,GAAE,OAAI2B,EAAKQ,iBAFxB,sBAOHN,UAxFkB7F,6BC2CxBoG,cAxCX,SAAAA,EAAYrH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiH,IACfpH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmH,GAAA9G,KAAAH,KAAMJ,KAMVsH,eAAiB,WACTrH,EAAKD,MAAMuH,eAAetH,EAAKiG,SAAS,CAACsB,UAAWvH,EAAKO,MAAMgH,WACnEvH,EAAKD,MAAMyH,eAAexH,EAAKD,MAAMgB,OAPrCf,EAAKO,MAAQ,CACTgH,UAAU,GAHCvH,wEAYV,IAAAwE,EAAArE,KACDsH,EAAgBtH,KAAKI,MAAMgH,SAAW,sBAAwB,SAC9DG,EAAYvH,KAAKI,MAAMgH,SAAYI,IAAYC,IAC/CC,EAAkB1H,KAAKJ,MAAM+H,gBAAkB3H,KAAKJ,MAAM+H,gBAAkB,MAAApH,OAAMP,KAAKJ,MAAMqG,KAAK2B,YAAtB,UAA2C,EACvHC,EAAU7H,KAAKJ,MAAM2E,OAAOI,IAAI,SAAAb,GAChC,IAAIgE,EAAgBzD,EAAKzE,MAAMqG,KAAKnC,EAAMI,MAE1C,OADIzB,MAAMsF,QAAQD,KAAgBA,EAAgBA,EAAcE,KAAK,SAEjExH,EAAAC,EAAAC,cAAA,OAAKc,IAAKsC,EAAMI,MAAQ4D,KAIhC,OADAD,EAAQvB,QAAQ9F,EAAAC,EAAAC,cAAA,OAAKc,IAAI,eAAexB,KAAKJ,MAAMqG,KAAKgC,cAEpDzH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MACIC,UAAU,yDACTkH,EACDrH,EAAAC,EAAAC,cAAA,OAAKqG,QAAS,SAAAlC,GAAE,OAAIR,EAAK6C,mBAAkB1G,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAiBC,KAAMZ,MAEtE/G,EAAAC,EAAAC,cAAA,OAAKC,UAAW2G,GAEZ9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB2C,wBAAyB,CAACC,OAAQmE,cAlCzD7G,aCgInBuH,EA9HgBnG,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAEvD,SAAAiG,EAAYxI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoI,IACfvI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsI,GAAAjI,KAAAH,KAAMJ,KACDQ,MAAQ,CACTiI,OAAQ,cACRC,eAAe,EACfC,qBAAsB,IALX1I,EAFoC,OAAAC,OAAAqD,EAAA,EAAArD,CAAAsI,EAAAjG,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAsI,EAAA,EAAA5G,IAAA,wBAAAnB,MAAA,SAWjCmI,EAAWC,GAC7B,OAAO,IAZ4C,CAAAjH,IAAA,SAAAnB,MAAA,SAehDI,EAAGiI,GACN,IAAIzC,EAAOjG,KAAKJ,MAAMqG,KAClB0C,EAAS1C,EAAKxF,GAAGT,KAAKI,MAAMiI,QAAQO,WACpCnG,MAAMsF,QAAQY,KAASA,EAASA,EAAOX,KAAK,MAChD,IAAIa,EAAS5C,EAAKyC,GAAG1I,KAAKI,MAAMiI,QAAQO,WACpCnG,MAAMsF,QAAQc,KAASA,EAASA,EAAOb,KAAK,MAChD,IAAIc,EAAUH,EAASA,EAAO7F,cAAgB,GAC1CiG,EAAUF,EAASA,EAAO/F,cAAgB,GAC9C,IAAK9C,KAAKI,MAAMkI,cAAe,CAC3B,IAAIU,EAAeF,EACnBA,EAAUC,EACVA,EAAUC,EAEd,OAAIF,EAAUC,GACJ,EAEND,EAAUC,EACL,EAEJ,IAlC8C,CAAAvH,IAAA,SAAAnB,MAAA,SAqChDyD,GACCA,IAAU9D,KAAKI,MAAMiI,OAAQrI,KAAK8F,SAAS,CAACwC,eAAgBtI,KAAKI,MAAMkI,gBACtEtI,KAAK8F,SAAS,CAACuC,OAAQvE,EAAOwE,eAAe,MAvCC,CAAA9G,IAAA,eAAAnB,MAAA,SA0C1C4I,GAAM,IAAA5E,EAAArE,KACf,OAAOiJ,EAAKzE,OAAO,SAAA0E,GACf,IAAIzE,EAAOJ,EAAKzE,MAAMqG,KAAKiD,GACvBxC,EAAerC,EAAKzE,MAAM8G,aAC1ByC,EAAa9E,EAAKzE,MAAMuJ,WAAWrG,cACvC,GAAIqG,IACC1E,EAAKwD,YAAYnF,cAAcsG,SAASD,GACrC,OAAO,EANW,IAAAE,EAAA,SAQjBvF,GACL,OAAKW,EAAKX,IAAW4C,EAAa5C,GAAOvB,OACpCkC,EAAKX,GAAOK,KAAK,SAAAC,GAAG,OAAIsC,EAAa5C,GAAOsF,SAAShF,UAA1D,EAAiE,CAAAkF,GAAO,GADvB,YADrD,IAAK,IAAIxF,KAAS4C,EAAc,KAAA6C,EAAAF,EAAvBvF,GAAuB,OAAAyF,GAAA,eACqB,SADrB,6BAAAA,EAAA,OAAAA,EAAAD,GAIhC,OAAO,MAvDwC,CAAA9H,IAAA,iBAAAnB,MAAA,SA2DxCoE,GACX,IAAI+E,EAAS,GAAAjJ,OAAMP,KAAKJ,MAAM6J,wBAAjBlJ,OAA0CkE,GACnDzE,KAAKI,MAAMmI,uBAAyBiB,EAAWxJ,KAAK8F,SAAS,CAACyC,qBAAsB,KAClFvI,KAAK8F,SAAS,CAACyC,qBAAsBiB,MA9DQ,CAAAhI,IAAA,kBAAAnB,MAAA,WAmEnD,IAAIM,EAAYX,KAAKJ,MAAM2E,OAAOhC,OAAS,EAAI,SAAW,kBAC1D,OAAIvC,KAAKI,MAAMmI,qBAA6BvI,KAAKJ,MAAMoD,UAAUC,WAAWC,QAAQlD,KAAKI,MAAMmI,sBAC1F,aAAAhI,OAAoBI,EAApB,6DArE8C,CAAAa,IAAA,SAAAnB,MAAA,WAwE9C,IAAA2F,EAAAhG,KA4BDuE,EAAS,CAAC,CAAC3D,KAAI,OAAUsD,KAAI,gBAAkB3D,OAAOP,KAAKJ,MAAM2E,QAAQI,IAAI,SAAAb,GAAK,OAAKtD,EAAAC,EAAAC,cAAA,MAAIc,IAAKsC,EAAMlD,MAAOkD,EAAMlD,KAAKJ,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAiBC,KAAMuB,IAAQ/I,UAAU,WAAWoG,QAAS,SAAAlC,GAAE,OAAImB,EAAKqC,OAAOvE,EAAMI,YAE7MyF,EACAnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACV4D,GAILqF,EAAY,8DAAArJ,OAAkEP,KAAKJ,MAAM2E,OAAOhC,OAAS,GAE7G,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWiJ,GAEXD,EACDnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAAA,WA1CD,WACP,IAAIuF,EAAOD,EAAKpG,MAAMqG,KACtB,IAAKA,EAAM,MAAO,kBAElB,IAAI4D,EAAW/J,OAAOqG,KAAKF,GAmB5B,OAjBC4D,EAAW7D,EAAK8D,aAAaD,IAEpB3F,KAAK,SAACzD,EAAGiI,GAAJ,OAAU1C,EAAK+D,OAAOtJ,EAAGiI,MACvCmB,EAAWA,EAASlF,IAAI,SAAAqF,GACrB,OACIxJ,EAAAC,EAAAC,cAACuJ,EAAD,CACIzI,IAAKwI,EACLpJ,KAAMoJ,EACN/D,KAAMA,EAAK+D,GACXzF,OAAQyB,EAAKpG,MAAM2E,OACnB4C,cAAenB,EAAKpG,MAAM2E,OAAOhC,OAAS,EAC1C8E,eAAgB,SAAAxC,GAAE,OAAImB,EAAKqB,eAAexC,IAC1C8C,gBAAiB3B,EAAKkE,uBAKrB3H,OAAesH,EACfrJ,EAAAC,EAAAC,cAAA,yFAmBCuI,IAELzI,EAAAC,EAAAC,cAAA,OAAM4C,wBAAyB,CAACC,OAAQvD,KAAKkK,2BAtHN9B,EAAA,CACtBvH,eCC/BsJ,EAAclI,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAE5C,SAAAgI,EAAYvK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACftK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqK,GAAAhK,KAAAH,KAAMJ,KACDQ,MAAQ,CACT+I,WAAY,GACZzC,aAAc,IAJH7G,EAFyB,OAAAC,OAAAqD,EAAA,EAAArD,CAAAqK,EAAAhI,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAqK,EAAA,EAAA3I,IAAA,gBAAAnB,MAAA,SAU9B4F,GACU,kBAATA,EAAmBjG,KAAK8F,SAAS,CAACqD,WAAYlD,IACpDjG,KAAK8F,SAAS,CAACY,aAAcT,MAZM,CAAAzE,IAAA,SAAAnB,MAAA,WAenC,IAAAgE,EAAArE,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAC0J,EAAD,CACIxJ,KAAMZ,KAAKJ,MAAMyK,WACjBzG,UAAW5D,KAAKJ,MAAMgE,YAE1BpD,EAAAC,EAAAC,cAAC4J,EAAD,CACIzD,aAAc7G,KAAKJ,MAAMiH,aACzBwD,WAAYrK,KAAKJ,MAAMyK,WACvB5D,iBAAkBzG,KAAKJ,MAAM6G,iBAC7BR,KAAMjG,KAAKJ,MAAMqG,KACjBF,cAAe,SAAAlB,GAAE,OAAIR,EAAK0B,cAAclB,MAE5CrE,EAAAC,EAAAC,cAAC6J,EAAD,CACItE,KAAMjG,KAAKJ,MAAMqG,KACjB1B,OAAQvE,KAAKJ,MAAM4K,eACnBrB,WAAYnJ,KAAKI,MAAM+I,WACvBzC,aAAc1G,KAAKI,MAAMsG,aACzB+C,uBAAwBzJ,KAAKJ,MAAM6J,8BAlCPU,EAAA,CACtBtJ,eAyCX2C,cAAW2G,GC5BXM,EAnBKxI,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAAsI,IAAA,OAAA3K,OAAAC,EAAA,EAAAD,CAAAE,KAAAyK,GAAA3K,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2K,GAAA9H,MAAA3C,KAAAsC,YAAA,OAAAxC,OAAAqD,EAAA,EAAArD,CAAA2K,EAAAtI,GAAArC,OAAAsD,EAAA,EAAAtD,CAAA2K,EAAA,EAAAjJ,IAAA,SAAAnB,MAAA,WAGxC,IAAI4F,EAAOjG,KAAKJ,MAAMoD,UAAU0H,iBAAiBC,YACjD,OACInK,EAAAC,EAAAC,cAACkK,EAAD,CACI3E,KAAMA,EACNoE,WAAW,eACXxD,aAAa,cACbjD,UAAU,sBACV4G,eAAgB,CAAC,CAAC5J,KAAM,oBAAqBsD,KAAM,oBAAqB,CAACtD,KAAM,gBAAiBsD,KAAM,gBAAiB,CAACtD,KAAM,4BAA6BsD,KAAM,4BACjKuC,iBAAkB,CAAC,CAAC7F,KAAM,oBAAqBsD,KAAM,oBAAqB,CAACtD,KAAM,gBAAiBsD,KAAM,iBACxGuF,uBAAuB,4BAZSgB,EAAA,CACtB5J,eCiBXgK,EAlBO5I,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAA0I,IAAA,OAAA/K,OAAAC,EAAA,EAAAD,CAAAE,KAAA6K,GAAA/K,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+K,GAAAlI,MAAA3C,KAAAsC,YAAA,OAAAxC,OAAAqD,EAAA,EAAArD,CAAA+K,EAAA1I,GAAArC,OAAAsD,EAAA,EAAAtD,CAAA+K,EAAA,EAAArJ,IAAA,SAAAnB,MAAA,WAG1C,IAAI4F,EAAOjG,KAAKJ,MAAMoD,UAAU8H,mBAAmBC,cACnD,OACIvK,EAAAC,EAAAC,cAACkK,EAAD,CACI3E,KAAMA,EACNoE,WAAW,gBACXxD,aAAa,iBACbjD,UAAU,gBACV4G,eAAgB,CAAC,CAAC5J,KAAM,cAAesD,KAAM,QAAS,CAACtD,KAAM,oBAAqBsD,KAAM,mBAAoB,CAACtD,KAAM,eAAgBsD,KAAM,gBACzIuC,iBAAkB,CAAC,CAAC7F,KAAM,cAAesD,KAAM,eAXb2G,EAAA,CACtBhK,eCkBbmK,EAnBC/I,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAA6I,IAAA,OAAAlL,OAAAC,EAAA,EAAAD,CAAAE,KAAAgL,GAAAlL,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkL,GAAArI,MAAA3C,KAAAsC,YAAA,OAAAxC,OAAAqD,EAAA,EAAArD,CAAAkL,EAAA7I,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAkL,EAAA,EAAAxJ,IAAA,SAAAnB,MAAA,WAGpC,IAAI4F,EAAOjG,KAAKJ,MAAMoD,UAAUiI,aAAaC,QAC7C,OACI1K,EAAAC,EAAAC,cAACkK,EAAD,CACI3E,KAAMA,EACNoE,WAAW,UACXxD,aAAa,SACbjD,UAAU,iBACV4G,eAAgB,GAChB/D,iBAAkB,GAClBgD,uBAAuB,uBAZKuB,EAAA,CACtBnK,eCiBPsK,EAlBAlJ,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAAgJ,IAAA,OAAArL,OAAAC,EAAA,EAAAD,CAAAE,KAAAmL,GAAArL,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqL,GAAAxI,MAAA3C,KAAAsC,YAAA,OAAAxC,OAAAqD,EAAA,EAAArD,CAAAqL,EAAAhJ,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAqL,EAAA,EAAA3J,IAAA,SAAAnB,MAAA,WAGnC,IAAI4F,EAAOjG,KAAKJ,MAAMoD,UAAUoI,YAAYC,OAC5C,OACI7K,EAAAC,EAAAC,cAACkK,EAAD,CACI3E,KAAMA,EACNoE,WAAW,SACXxD,aAAa,QACbjD,UAAU,gBACV4G,eAAgB,CAAC,CAAC5J,KAAM,OAAQsD,KAAM,QAAS,CAACtD,KAAM,WAAYsD,KAAM,YAAa,CAACtD,KAAM,eAAgBsD,KAAM,4BAClHuC,iBAAkB,CAAC,CAAC7F,KAAM,OAAQsD,KAAM,QAAS,CAACtD,KAAM,WAAYsD,KAAM,mBAX/CiH,EAAA,CACtBtK,eCsBNyK,mLAfX,OACE9K,EAAAC,EAAAC,cAAA,OAAK6K,GAAG,oBACN/K,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,KACEhL,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW1J,IAChCxB,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAWjB,IACvCjK,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWb,IACzCrK,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWV,IAClCxK,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWP,IACjC3K,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,UAAWjK,aAV/BZ,aCQN8K,qBAdX,SAAAA,EAAY/L,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2L,IACf9L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6L,GAAAxL,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAMf,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,gBATKE,cCYN+K,0LAXF,IAAA/L,EAAAG,KACD6L,EAAI,IAAAtL,OAAOP,KAAKJ,MAAMkM,OACtBA,EAAQ9L,KAAKJ,MAAMkM,MAAMC,MAAM,KAAKpH,IAAI,SAAAqH,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKjJ,MAAM,KAAIiF,KAAK,KACvG,OACIxH,EAAAC,EAAAC,cAAA,MAAIyL,YAAa,kBAAMtM,EAAKD,MAAMwM,QAAQN,IACxCO,WAAY,kBAAMxM,EAAKD,MAAMwM,QAAQ,QAAO5L,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAIkI,GAAOC,WANrDjL,cCkCPyL,EAhCKrK,YAAO,YAAPA,CAAoBC,YAAQ,SAAAC,GAAA,SAAAmK,IAAA,OAAAxM,OAAAC,EAAA,EAAAD,CAAAE,KAAAsM,GAAAxM,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwM,GAAA3J,MAAA3C,KAAAsC,YAAA,OAAAxC,OAAAqD,EAAA,EAAArD,CAAAwM,EAAAnK,GAAArC,OAAAsD,EAAA,EAAAtD,CAAAwM,EAAA,EAAA9K,IAAA,SAAAnB,MAAA,WAEnC,IAAAR,EAAAG,KACDuM,EAAmBvM,KAAKJ,MAAMoD,UAAUC,WAAWuJ,YAAYjK,OAC/DkK,EAAsBvH,KAAKwH,MAAMH,EAAiB,GAElDI,EAAoB,GACpBC,EAAqB,GAezB,OAbA5M,KAAKJ,MAAMoD,UAAUC,WAAWuJ,YAAYpG,QAAQ,SAAC0F,EAAO1K,GACxD,IAAIyK,EAAI,UAAAtL,OAAauL,GACjBe,EACArM,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAIkI,EAAMrK,IAAKsK,EACrBnL,UAAU,2BACVoG,QAAS,kBAAMlH,EAAKD,MAAMwM,QAAQ,QAE7BN,GAGL1K,EAAQqL,EAAsBE,EAAkBrL,KAAKuL,GACpDD,EAAmBtL,KAAKuL,KAG7BrM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,WAAMiM,GACNnM,EAAAC,EAAAC,cAAA,WAAMkM,QAzB0BN,EAAA,CACtBzL,eCaXiM,6MAfX/F,QAAU,WACNgG,QAAQC,IAAI,oFAEP,IAAA3I,EAAArE,KAEL,OACQQ,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAI3D,KAAKJ,MAAMiM,KAAMlL,UAAU,0BAA0BoG,QAAS,kBAAM1C,EAAKzE,MAAMwM,QAAQ/H,EAAKzE,MAAMkM,SACxGtL,EAAAC,EAAAC,cAAA,UACKV,KAAKJ,MAAMgB,cATXC,aCwCVoM,mLArCP,OACIzM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,UACLiL,KAAK,aAETrL,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,SACLiL,KAAK,YAETrL,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,eACLiL,KAAK,kBAETrL,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,iBACLiL,KAAK,oBAETrL,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,YACLiL,KAAK,KAETrL,EAAAC,EAAAC,cAACwM,EAAD,CACId,QAASpM,KAAKJ,MAAMwM,QACpBxL,KAAK,gBACLiL,KAAK,aAjCAhL,aCuBVsM,mLArBF,IAAAtN,EAAAG,KACDoN,EAAepN,KAAKJ,MAAMyN,eAAiBrN,KAAKJ,MAAMkM,MAAQ,yBAA2B,SAE7F,OACItL,EAAAC,EAAAC,cAAA,OACIC,UAAWyM,EACXjB,YAAa,kBAAMtM,EAAKD,MAAMwM,QAAQvM,EAAKD,MAAMkM,QACjDO,WAAY,kBAAMxM,EAAKD,MAAMwM,QAAQ,QAErC5L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAC8L,EAAD,CACIJ,QAASpM,KAAKJ,MAAMwM,UACxB5L,EAAAC,EAAAC,cAAC4M,EAAD,CACIlB,QAASpM,KAAKJ,MAAMwM,mBAdlBvL,aCsCX0M,6MApCbnN,MAAQ,CACNoN,SAAU,KACVH,aAAc,QAGhBjB,QAAU,SAAAtF,GACRjH,EAAKiG,SAAS,CAAE0H,SAAU1G,GAAU,WAC9BA,EAAQjH,EAAK4N,kBAEfC,WAAW,WACT7N,EAAK4N,mBACJ,UAITA,gBAAkB,WAChB5N,EAAKiG,SAAS,CAAEuH,aAAcxN,EAAKO,MAAMoN,oFAIzC,OACEhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAACiN,EAAD,CAAS7B,MAAM,QAAQM,QAASpM,KAAKoM,UACrC5L,EAAAC,EAAAC,cAACiN,EAAD,CAAS7B,MAAM,kBAAkBM,QAASpM,KAAKoM,WAEjD5L,EAAAC,EAAAC,cAACkN,EAAD,CACEP,aAAcrN,KAAKI,MAAMiN,aACzBjB,QAASpM,KAAKoM,QACdN,MAAO,kBA9BIjL,6CC2BNgN,cA7BX,SAAAC,EAAY9K,GAAW,IAAAnD,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAA8N,GAAA9N,KAIvBkD,QAAU,GAJalD,KAKvBwM,YAAc,GALSxM,KAMvB+N,KAAO,yBANgB/N,KASvBgO,qBATuBlO,OAAAmO,EAAA,EAAAnO,CAAAoO,EAAAzN,EAAA0N,KASA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzN,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAM,kBADV,cACbN,EADaG,EAAAI,KAAAJ,EAAAE,KAAA,EAEAL,EAASQ,OAFT,UAEbP,EAFaE,EAAAI,KAGK,MAApBP,EAASS,OAHM,CAAAN,EAAAE,KAAA,cAITK,MAAMT,EAAKU,SAJF,OAMnBnP,EAAKqD,QAAUoL,EAAKW,cACpBpP,EAAK2M,YAAc3M,EAAKqP,cAAcZ,EAAKW,eAPxB,yBAAAT,EAAAW,SAAAf,MATApO,KAmBvBkP,cAAgB,SAAAE,GACZ,OAAOtP,OAAOqG,KAAKiJ,GAClB5K,OAAO,SAAAhD,GAAG,OAA8B,IAA1BA,EAAIuK,MAAM,KAAKxJ,SAC7BoC,IAAI,SAAAnD,GAAG,OAAIA,EAAIuK,MAAM,KAAK,GAAGA,MAAM,KACnCpH,IAAI,SAAAqH,GAAI,OAAIA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKjJ,MAAM,KAAIiF,KAAK,QAtBhEhI,KAAKgD,UAAYA,EACjBhD,KAAKgO,wBA2BuB,CAChCxB,YAAa6C,IACbnM,QAASmM,IACTtB,KAAMsB,MCfKxB,cAjBX,SAAAyB,EAAYtM,GAAW,IAAAnD,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAsP,GAAAtP,KAIvB+K,cAAgB,GAJO/K,KAOvBgO,qBAPuBlO,OAAAmO,EAAA,EAAAnO,CAAAoO,EAAAzN,EAAA0N,KAOA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzN,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAM,kBADV,cACbN,EADaG,EAAAI,KAAAJ,EAAAE,KAAA,EAEAL,EAASQ,OAFT,UAEbP,EAFaE,EAAAI,KAGK,MAApBP,EAASS,OAHM,CAAAN,EAAAE,KAAA,cAITK,MAAMT,EAAKU,SAJF,OAMnBnP,EAAKkL,cAAgBuD,EAAKzD,cANP,wBAAA2D,EAAAW,SAAAf,MANnBpO,KAAKgD,UAAYA,EACjBhD,KAAKgO,wBAe+B,CACxCjD,cAAesE,MCDJxB,cAjBX,SAAA0B,EAAYvM,GAAW,IAAAnD,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAuP,GAAAvP,KAIvB2K,YAAc,GAJS3K,KAOvBgO,qBAPuBlO,OAAAmO,EAAA,EAAAnO,CAAAoO,EAAAzN,EAAA0N,KAOA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzN,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAM,gBADV,cACbN,EADaG,EAAAI,KAAAJ,EAAAE,KAAA,EAEAL,EAASQ,OAFT,UAEbP,EAFaE,EAAAI,KAGK,MAApBP,EAASS,OAHM,CAAAN,EAAAE,KAAA,cAITK,MAAMT,EAAKU,SAJF,OAMnBnP,EAAK8K,YAAc2D,EAAK7D,YANL,wBAAA+D,EAAAW,SAAAf,MANnBpO,KAAKgD,UAAYA,EACjBhD,KAAKgO,wBAe6B,CACtCrD,YAAa0E,MCDFxB,cAjBX,SAAAC,EAAY9K,GAAW,IAAAnD,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAA8N,GAAA9N,KAIvBkL,QAAU,GAJalL,KAOvBgO,qBAPuBlO,OAAAmO,EAAA,EAAAnO,CAAAoO,EAAAzN,EAAA0N,KAOA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzN,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAM,YADV,cACbN,EADaG,EAAAI,KAAAJ,EAAAE,KAAA,EAEAL,EAASQ,OAFT,UAEbP,EAFaE,EAAAI,KAGK,MAApBP,EAASS,OAHM,CAAAN,EAAAE,KAAA,cAITK,MAAMT,EAAKU,SAJF,OAMnBnP,EAAKqL,QAAUoD,EAAKtD,QAND,wBAAAwD,EAAAW,SAAAf,MANnBpO,KAAKgD,UAAYA,EACjBhD,KAAKgO,wBAeuB,CAChC9C,QAASmE,MCDExB,cAjBX,SAAAC,EAAY9K,GAAW,IAAAnD,EAAAG,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAA8N,GAAA9N,KAIvBqL,OAAS,GAJcrL,KAOvBgO,qBAPuBlO,OAAAmO,EAAA,EAAAnO,CAAAoO,EAAAzN,EAAA0N,KAOA,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAzN,EAAA8N,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAM,WADV,cACbN,EADaG,EAAAI,KAAAJ,EAAAE,KAAA,EAEAL,EAASQ,OAFT,UAEbP,EAFaE,EAAAI,KAGK,MAApBP,EAASS,OAHM,CAAAN,EAAAE,KAAA,cAITK,MAAMT,EAAKU,SAJF,OAMnBnP,EAAKwL,OAASiD,EAAKnD,OANA,wBAAAqD,EAAAW,SAAAf,MANnBpO,KAAKgD,UAAYA,EACjBhD,KAAKgO,wBAeuB,CAChC3C,OAAQgE,MCHGrM,EAFG,IAThB,SAAAwM,IAAe1P,OAAAC,EAAA,EAAAD,CAAAE,KAAAwP,GACXxP,KAAKiD,WAAa,IAAI6K,EAAW9N,MACjCA,KAAK8K,mBAAqB,IAAIwE,EAAmBtP,MACjDA,KAAK0K,iBAAmB,IAAI6E,EAAiBvP,MAC7CA,KAAKiL,aAAe,IAAIwE,EAAazP,MACrCA,KAAKoL,YAAc,IAAIsE,EAAY1P,aCGzC2P,IAASC,OACLpP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAU7M,UAAWA,GACjBxC,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAQoM,SAAU,KACdtP,EAAAC,EAAAC,cAACqP,EAAD,MACAvP,EAAAC,EAAAC,cAACsP,EAAD,MACAxP,EAAAC,EAAAC,cAACuP,EAAD,QAGRC,SAASC,eAAe,ShC0GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.650f966a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\n\nclass AttributeBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let {value} = this.props;\n\n    if (this.props.modifier) {\n      if (value >= 0) value = `+${value}`;\n      else value = `${value}`;\n    }\n\n    return (\n      <div className=\"character_sheet__attribute_box__container\">\n        <div className=\"character_sheet__attribute_box__title\" >\n          <h5>{this.props.name}</h5>\n        </div>\n        <div className=\"character_sheet__attribute_box__stat\">\n          <h4 className=\"character_sheet__background_text\">value</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AttributeBox;\n","import React, { Component } from \"react\";\n\nclass CharacterSheetHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return (\n      <div className=\"character_sheet__header\">\n        <h3>Name:</h3>\n      </div>\n    );\n  }\n}\n\nexport default CharacterSheetHeader;\n","import React, { Component } from \"react\";\n\nclass SecondarySkillItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return (\n      <div className=\"character_sheet__body__group__item__levels__level character_sheet__body__secondary_skill\" >\n        <h6>\n          <span className=\"character_sheet__background_text\">\n            Secondary\n          </span>\n        </h6>\n        <input type=\"text\" placeholder=\"Rank\" />\n      </div>\n    );\n  }\n}\n\nexport default SecondarySkillItem;\n","import React, { Component } from \"react\";\n\nimport SecondarySkillItem from './secondarySkillItem.js';\n\nclass SkillBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    const secondarySkillsDiv = [];\n    for (let index = 0; index < this.props.secondarySkillCount; index++) {\n      secondarySkillsDiv.push(<SecondarySkillItem key={index} />);\n    }\n\n    return (\n      <div className=\"character_sheet__body__group__item\">\n        <div className=\"character_sheet__body__group__item__levels\">\n          <div className=\"character_sheet__body__group__item__levels__level character_sheet__body__primary_skill\">\n            <h5>\n              <span className=\"character_sheet__background_text\">\n                Skill Name\n              </span>\n            </h5>\n            <input type=\"text\" placeholder=\"Rank\" />\n          </div>\n          {secondarySkillsDiv}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillBox;\n","import React, { Component } from \"react\";\nimport \"./characterSheet.css\";\n\nimport AttributeBox from \"./attributeBox.js\";\nimport CharacterSheetHeader from \"./characterSheetHeader.js\";\nimport SkillBox from \"./skillBox.js\";\n\nclass CharacterSheet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"character_sheet__container\">\n        <CharacterSheetHeader />\n        <div className=\"character_sheet__body\">\n          {\n            // Attributes and skills.\n          }\n          <div className=\"character_sheet__body__content\">\n            {\n              // Attributes column\n            }\n            <div className=\"character_sheet__body__group character_sheet__body__group_attributes\">\n              <div className=\"character_sheet__body__attributes\">\n                <AttributeBox name=\"body\" value={1} modifier={true} />\n                <AttributeBox name=\"reflexes\" value={0} modifier={true} />\n                <AttributeBox name=\"perception\" value={0} modifier={true} />\n                <AttributeBox name=\"mind\" value={-1} modifier={true} />\n\n                <AttributeBox name=\"speed\" value={5} />\n                <AttributeBox name=\"size\" value={0} modifier={true} />\n                <AttributeBox name=\"reach\" value={0} modifier={true} />\n              </div>\n            </div>\n            {\n              // Defense column\n            }\n            <div className=\"character_sheet__body__group   character_sheet__body__group_wrap\">\n              <div className=\"character_sheet__body__group__item\">\n                <div className=\"character_sheet__body__group__item__tracker\">\n                  <h5 className=\"character_sheet__body__resource_name\">\n                    Defense\n                  </h5>\n                  <div className=\"character_sheet__body__group__item__stat\">\n                    <h4>\n                      <span className=\"character_sheet__hidden_text\">\n                        ____\n                      </span>\n                      (\n                      <span className=\"character_sheet__hidden_text\">\n                        ____\n                      </span>\n                      )\n                    </h4>\n                  </div>\n                </div>\n                <div className=\"character_sheet__body__group__item__levels\">\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Melee Bonus</h6>\n                    <input type=\"text\" />\n                  </div>\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Range Bonus</h6>\n                    <input type=\"text\" />\n                  </div>\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Magic Bonus</h6>\n                    <input type=\"text\" />\n                  </div>\n                  <div className=\"character_sheet__body__group__item__levels\">\n                    <div className=\"character_sheet__body__group__item__levels__level\">\n                      <h6>Armor Value</h6>\n                      <input type=\"text\" />\n                    </div>\n                    <h5 className=\"character_sheet__body__resource_name_secondary\">\n                      Resistances:\n                    </h5>\n                    <div className=\"character_sheet__body__group__item__levels__level\">\n                      <h6>All Damage</h6>\n                      <input type=\"text\" />\n                    </div>\n                    <div className=\"character_sheet__body__group__item__levels__level\">\n                      <h6>Bludgeoning</h6>\n                      <input type=\"text\" />\n                    </div>\n                    <div className=\"character_sheet__body__group__item__levels__level\">\n                      <h6>Penetrating</h6>\n                      <input type=\"text\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <SkillBox secondarySkillCount={2} />\n              <SkillBox secondarySkillCount={2} />\n            </div>\n            {\n              // Stamina column\n            }\n            <div className=\"character_sheet__body__group character_sheet__body__group_wrap\">\n              <div className=\"character_sheet__body__group__item\">\n                <div className=\"character_sheet__body__group__item__tracker\">\n                  <h5 className=\"character_sheet__body__resource_name\">\n                    Stamina\n                  </h5>\n                  <div className=\"character_sheet__body__group__item__stat\">\n                    <h4>\n                      <span className=\"character_sheet__hidden_text\">\n                        ___\n                      </span>\n                      /\n                      <span className=\"character_sheet__hidden_text\">___</span>\n                      (<span className=\"character_sheet__hidden_text\">___</span>\n                      )\n                    </h4>\n                  </div>\n                  <h5 className=\"character_sheet__body__resource_name character_sheet__body__resource_name_additional\">\n                    Initiative\n                  </h5>\n                  <div className=\"character_sheet__body__group__item__stat\">\n                    <h4>\n                      <span className=\"character_sheet__hidden_text\">____</span>\n                    </h4>\n                  </div>\n                </div>\n              </div>\n              <SkillBox secondarySkillCount={3} />\n              <SkillBox secondarySkillCount={2} />\n              <SkillBox secondarySkillCount={2} />\n            </div>\n            {\n              // Wounds column\n            }\n            <div className=\"character_sheet__body__group character_sheet__body__group_wrap\">\n              <div className=\"character_sheet__body__group__item\">\n                <div className=\"character_sheet__body__group__item__tracker\">\n                  <h5 className=\"character_sheet__body__resource_name\">\n                    Wounds\n                  </h5>\n                  <div className=\"character_sheet__body__group__item__stat\">\n                    <h4>\n                      <span className=\"character_sheet__hidden_text\">____</span>\n                      /\n                      <span className=\"character_sheet__hidden_text\">____</span>\n                    </h4>\n                  </div>\n                </div>\n                <div className=\"character_sheet__body__group__item__levels\">\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Wounded</h6>\n                    <input type=\"checkbox\" />\n                  </div>\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Badly Wounded</h6>\n                    <input type=\"checkbox\" />\n                  </div>\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Mortaly Wounded</h6>\n                    <input type=\"checkbox\" />\n                  </div>\n                </div>\n              </div>\n\n              <SkillBox secondarySkillCount={3} />\n              <SkillBox secondarySkillCount={2} />\n              <SkillBox secondarySkillCount={2} />\n            </div>\n          </div>\n        </div>\n        <div className=\"character_sheet__notes\">\n          <div className=\"paper\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CharacterSheet;\n","import React, {Component} from 'react';\n\nclass SideBar extends Component {\n    render() {\n\n        return (\n            <div className=\"sideBar\">\n            <div style={{\"marginTop\": \"50%\"}}>\n            <p>Nothing Here Yet,</p>\n            <p>Content Coming Soon.</p>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './documentation.css';\nimport SideBar from './sideBar.js';\n\nimport { observer, inject } from \"mobx-react\";\n\n\nconst CoreRules = inject(\"rootStore\")(observer(\nclass CoreRules extends Component {\n\n\n    renderedDoc = () => {\n        // Get the location without the leading '/'\n        let location = this.props.location.pathname.toLowerCase().slice(1);\n        // If the location has a trailing '/' remove it too.\n        if (location.slice(-1) === '/') location = location.slice(0, -1);\n        // Return the documentation for the processed location.\n        return this.props.rootStore.rulesStore.rawDocs[location];\n    }\n\n    render() {\n        return (\n            <div className=\"coreRules__Container\">\n                <SideBar />\n                <div className=\"coreRules\" dangerouslySetInnerHTML={{__html: this.renderedDoc()}} />\n            </div>\n        );\n    }\n}\n))\n\nexport default withRouter(CoreRules);\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass DataDisplayTitleSection extends Component {\n    render() {\n\n        return (\n            <div className=\"dataDisplay__title__container\">\n                <h1 className=\"dataDisplay__title\">{this.props.name}</h1>\n                <Link to={this.props.rulesLink} className=\"dataDisplay__docLink\">\n                    <h4>{this.props.name} Rules</h4>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayTitleSection;\n","import React, {Component} from 'react';\n\nclass DataDisplayFilterField extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    changeFilter({field}) {\n        this.props.selectCheckmark(field);\n    }\n\n    shouldBeChecked(field) {\n        let filters = this.props.filters;\n        if (!filters[this.props.sort]) return false;\n        if (!filters[this.props.sort].some(elm => elm === field)) return false;\n        return true;\n    }\n\n    render() {\n        let fieldsList = !this.props.fields ? \"\" : (this.props.fields.filter(item => !!item).sort());\n\n        let options = !fieldsList ? [] : (\n            fieldsList.map((field, index) => {\n                return <div key={index}><input type=\"checkbox\" value={field} onChange={ev => this.changeFilter({field})} checked={this.shouldBeChecked(field)}/>{field}<br /></div>\n            })\n        )\n\n        let divCount = Math.ceil(options.length / 4);\n        if (divCount > 3) divCount = 3;\n        let divCountLength = Math.ceil(options.length/divCount);\n\n        let optionDivs = [];\n        for (let i = 0; i < divCount; i++) {\n            optionDivs.push(<div key={i} style={{width: `calc(100% / ${divCount})`, minWidth: `fit-content`}}>\n                {options.splice(0, divCountLength)}\n            </div>)\n        }\n\n        let padding = (10 * divCount + 2 * divCount) / 2;\n        return (\n            <div\n                className=\"dataDisplay__filter__checkBox\"\n                style={{width: this.props.width, minWidth: `fit-content`}}\n                >\n                <h5 style={{paddingLeft: `calc(50% - ${padding}rem)`}}>{this.props.name}</h5>\n                <div className=\"checkmark__container\" style={{paddingLeft: `calc(50% - ${padding}rem)`}}>{optionDivs}</div>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayFilterField;\n","import React, {Component} from 'react';\nimport FilterField from './dataDisplayFilterField.js';\n\nclass DataDisplayFilterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchedName: \"\",\n            filters: {}\n        };\n    }\n\n    onChange(value) {\n        this.setState({searchedName: value}, () => this.props.updateFilters(this.state.searchedName));\n    }\n\n    resetFilters() {\n        this.setState({searchedName: \"\", filters: {}}, () => {\n            this.props.updateFilters(this.state.searchedName)\n            this.props.updateFilters(this.state.filters)\n        });\n    }\n\n    getFields(field) {\n        let data = this.props.data;\n        let array = [];\n        if (data) {\n            let keys = Object.keys(data);\n            keys.forEach(key => {\n                if (data[key][field] && data[key][field].length) {\n                    if (typeof data[key][field] === 'string') data[key][field] = [data[key][field]];\n\n                    data[key][field].forEach(item => {\n                        if (array.indexOf(item) !== -1) return;\n                        array.push(item);\n                    });\n                }\n                else {\n                    if (array.indexOf(\"none\") !== -1) return;\n                    array.unshift(\"none\");\n                }\n            });\n        }\n        return array;\n    }\n\n    selectCheckmark(name, field) {\n        let filters = this.state.filters;\n        if (!filters[field]) filters[field] = [];\n        if (filters[field].indexOf(name) === -1) filters[field].push(name);\n        else filters[field].splice(filters[field].indexOf(name), 1);\n        this.setState({filters: filters}, () => this.props.updateFilters(this.state.filters));\n    }\n\n    render() {\n        let width = 75 / this.props.filterableFields.length;\n        let filterFields = this.props.filterableFields.map(field => {\n            return (<FilterField\n                width={`${width}%`}\n                key={field.name}\n                name={field.name}\n                sort={field.sort}\n                fields={this.getFields(field.sort)}\n                filters={this.state.filters}\n                selectCheckmark={ev => this.selectCheckmark(ev, field.sort)}\n                />)\n            });\n\n\n\n            return (\n                <div className=\"dataDisplay__filter__container\">\n                    <div\n                        className=\"dataDisplay__filter__name\"\n                        style={{width: `25%`}}\n                        >\n                        <h5>{this.props.nameSingular} Name</h5>\n                        <input\n                            className=\"dataDisplay__filter__name__input\"\n                            type={\"text\"}\n                            placeholder={\"placeholder text\"}\n                            value={this.state.searchedName}\n                            onChange={ev => this.onChange(ev.target.value)}\n                            />\n                        <h6\n                            className=\"resetFilters__button\"\n                            onClick={ev => this.resetFilters()}\n                            >\n                            Reset All Filters\n                        </h6>\n                    </div>\n                    {filterFields}\n\n                </div>\n            )\n        }\n    }\n\n    export default DataDisplayFilterSection;\n","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\n\nclass DataDisplayListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false\n         };\n    }\n\n    toggleExpanded = () => {\n        if (this.props.expandInPlace) this.setState({expanded: !this.state.expanded});\n        this.props.renderSelected(this.props.name);\n    }\n\n    render() {\n        let expandedClass = this.state.expanded ? \"expandedListDisplay\" : \"hidden\";\n        let plusMinus = this.state.expanded ? (faMinus) : (faPlus);\n        let expandedContent = this.props.renderedContent ? this.props.renderedContent : `<p>${this.props.data.description}</p>` || \"\";\n        let display = this.props.fields.map(field => {\n            let displayString = this.props.data[field.sort];\n            if (Array.isArray(displayString)) displayString = displayString.join(\" or \");\n            return (\n                <div key={field.sort} >{displayString}</div>\n            )\n        })\n        display.unshift(<div key=\"displayName\">{this.props.data.displayName}</div>)\n        return (\n            <div>\n                <li\n                    className=\"dataDisplay__list__table__row dataDisplay__list__item\">\n                    {display}\n                    <div onClick={ev => this.toggleExpanded()}><FontAwesomeIcon icon={plusMinus} /></div>\n                </li>\n                <div className={expandedClass}\n                >\n                    <div className=\"expandedListContent\" dangerouslySetInnerHTML={{__html: expandedContent}} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayListItem;\n","import React, {Component} from 'react';\nimport DataDisplayListItem from './dataDisplayListItem.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\n\nimport { observer, inject } from \"mobx-react\";\n\nconst DataDisplayListSection = inject(\"rootStore\")(observer (\nclass DataDisplayListSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: \"displayName\",\n            sortAssending: true,\n            displayDocumentation: \"\"\n         };\n    }\n\n    shouldComponentUpdate(nextprops, nextstate) {\n        return true;\n    }\n\n    sorter(a, b) {\n        let data = this.props.data;\n        let fieldA = data[a][this.state.sortBy].toString();\n        if (Array.isArray(fieldA)) fieldA = fieldA.join(\" \");\n        let fieldB = data[b][this.state.sortBy].toString();\n        if (Array.isArray(fieldB)) fieldB = fieldB.join(\" \");\n        let stringA = fieldA ? fieldA.toLowerCase() : \"\";\n        let stringB = fieldB ? fieldB.toLowerCase() : \"\";\n        if (!this.state.sortAssending) {\n            let placeholderA = stringA;\n            stringA = stringB;\n            stringB = placeholderA;\n        }\n        if (stringA < stringB) {\n          return -1;\n        }\n        if (stringA > stringB) {\n          return 1;\n        }\n      return 0;\n    }\n\n    sortBy(field) {\n        if (field === this.state.sortBy) this.setState({sortAssending: !this.state.sortAssending});\n        else this.setState({sortBy: field, sortAssending: true});\n    }\n\n    applyFilters(list) {\n        return list.filter(itemKey => {\n            let item = this.props.data[itemKey];\n            let filterFields = this.props.filterFields;\n            let filterName = this.props.filterName.toLowerCase();\n            if (filterName &&\n                !item.displayName.toLowerCase().includes(filterName)) {\n                    return false;\n            }\n            for (let field in filterFields) {\n                if (!item[field] || !filterFields[field].length) continue;\n                if (!item[field].some(elm => filterFields[field].includes(elm))) return false;\n            }\n            return true;\n        })\n    }\n\n    renderSelected(item) {\n        let extension = `${this.props.documentationExtension}${item}`;\n        if (this.state.displayDocumentation === extension) this.setState({displayDocumentation: \"\"});\n        else  this.setState({displayDocumentation: extension});\n\n    }\n\n    renderedDisplay() {\n        let className = this.props.fields.length > 2 ? \"hidden\" : \"placeholderText\"\n        if (this.state.displayDocumentation) return this.props.rootStore.rulesStore.rawDocs[this.state.displayDocumentation];\n        else return `<p class=\"${className}\">Please select an option from the left to display.</p>`;\n\n    }\n    render() {\n        let list = () => {\n            let data = this.props.data;\n            if (!data) return \"No Data Loaded.\";\n\n            let listHtml = Object.keys(data);\n\n            listHtml = this.applyFilters(listHtml);\n\n            listHtml.sort((a, b) => this.sorter(a, b));\n            listHtml = listHtml.map(dataKey => {\n               return (\n                   <DataDisplayListItem\n                       key={dataKey}\n                       name={dataKey}\n                       data={data[dataKey]}\n                       fields={this.props.fields}\n                       expandInPlace={this.props.fields.length > 1}\n                       renderSelected={ev => this.renderSelected(ev)}\n                       renderedContent={this.renderedDisplay()}\n                   />\n               );\n\n           });\n           if (listHtml.length) return listHtml;\n           else return (<p>Oh no! It looks like there are no results that match your filter selections.</p>)\n        }\n\n        let fields = [{name: `Name`, sort: `displayName`}].concat(this.props.fields).map(field => (<h5 key={field.name}>{field.name}<FontAwesomeIcon icon={faSort} className=\"sortIcon\" onClick={ev => this.sortBy(field.sort)}/></h5>));\n\n        let headerRow = (\n            <div className=\"dataDisplay__list__table__row dataDisplay__list__header\">\n                {fields}\n            </div>\n        )\n\n        let displayClass =  `dataDisplay__list__container dataDisplay__list__container__${this.props.fields.length + 2}`;\n\n        return (\n            <div className={displayClass}>\n\n                {headerRow}\n                <div className=\"dataDisplay__list__content__container\">\n                    <div>\n                        {list()}\n                    </div>\n                    <div  dangerouslySetInnerHTML={{__html: this.renderedDisplay()}} />\n                </div>\n            </div>\n        )\n    }\n}\n))\n\nexport default DataDisplayListSection;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './dataDisplay.css';\nimport DataDisplayTitleSection from './dataDisplayTitleSection.js';\nimport DataDisplayFilterSection from './dataDisplayFilterSection.js';\nimport DataDisplayListSection from './dataDisplayListSection.js';\n\nimport { observer, inject } from \"mobx-react\";\n\nconst DataDisplay = inject(\"rootStore\")(observer(\nclass DataDisplay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterName: \"\",\n            filterFields: {}\n        };\n    }\n\n    updateFilters(data) {\n        if (typeof data === \"string\") this.setState({filterName: data});\n        else this.setState({filterFields: data});\n    }\n\n    render() {\n        return (\n            <div className=\"dataDisplay__container\">\n                <DataDisplayTitleSection\n                    name={this.props.namePlural}\n                    rulesLink={this.props.rulesLink}\n                />\n                <DataDisplayFilterSection\n                    nameSingular={this.props.nameSingular}\n                    namePlural={this.props.namePlural}\n                    filterableFields={this.props.filterableFields}\n                    data={this.props.data}\n                    updateFilters={ev => this.updateFilters(ev)}\n                />\n                <DataDisplayListSection\n                    data={this.props.data}\n                    fields={this.props.sortableFields}\n                    filterName={this.state.filterName}\n                    filterFields={this.state.filterFields}\n                    documentationExtension={this.props.documentationExtension}\n                />\n            </div>\n        );\n    }\n}\n))\n\nexport default withRouter(DataDisplay);\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst SkillChecks = inject(\"rootStore\")(observer (\nclass SkillChecks extends Component {\n    render() {\n        let data = this.props.rootStore.skillChecksStore.skillChecks;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Skill Checks\"\n                nameSingular=\"Skill Check\"\n                rulesLink=\"/rules/skill checks\"\n                sortableFields={[{name: \"Primary Attribute\", sort: \"primaryAttribute\"}, {name: \"Primary Skill\", sort: \"primarySkill\"}, {name: \"Relevant Secondary Skills\", sort: \"relevantSecondarySkills\"}]}\n                filterableFields={[{name: \"Primary Attribute\", sort: \"primaryAttribute\"}, {name: \"Primary Skill\", sort: \"primarySkill\"}]}\n                documentationExtension=\"rules/skill checks/\"\n            />\n        )\n    }\n}\n))\n\nexport default SkillChecks;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst CombatActions = inject(\"rootStore\")(observer (\nclass CombatActions extends Component {\n    render() {\n        let data = this.props.rootStore.combatActionsStore.combatActions;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Combat Action\"\n                nameSingular=\"Combat Actions\"\n                rulesLink=\"/rules/combat\"\n                sortableFields={[{name: \"Action Type\", sort: \"type\"}, {name: \"Action Point Cost\", sort: \"actionPointCost\"}, {name: \"Stamina Cost\", sort: \"staminaCost\"}]}\n                filterableFields={[{name: \"Action Type\", sort: \"type\"}]}\n            />\n        )\n    }\n}\n))\n\nexport default CombatActions;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst Strains = inject(\"rootStore\")(observer (\nclass Strains extends Component {\n    render() {\n        let data = this.props.rootStore.strainsStore.strains;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Strains\"\n                nameSingular=\"Strain\"\n                rulesLink=\"/rules/strains\"\n                sortableFields={[]}\n                filterableFields={[]}\n                documentationExtension=\"rules/strains/\"\n            />\n        )\n    }\n}\n))\n\nexport default Strains;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst Traits = inject(\"rootStore\")(observer (\nclass Traits extends Component {\n    render() {\n        let data = this.props.rootStore.traitsStore.traits;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Traits\"\n                nameSingular=\"Trait\"\n                rulesLink=\"/rules/traits\"\n                sortableFields={[{name: \"Type\", sort: \"type\"}, {name: \"Keywords\", sort: \"keywords\"}, {name: \"Requirements\", sort: \"requirementsDescription\"}]}\n                filterableFields={[{name: \"Type\", sort: \"type\"}, {name: \"Keywords\", sort: \"keywords\"}]}\n            />\n        )\n    }\n}\n))\n\nexport default Traits;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport CharacterSheet from \"./characterSheet/characterSheet.js\";\nimport CoreRules from \"./documentation/coreRules.js\";\nimport SkillChecks from \"./dataDisplay/skillChecks.js\";\nimport CombatActions from \"./dataDisplay/combatActions.js\";\nimport Strains from \"./dataDisplay/strains.js\";\nimport Traits from \"./dataDisplay/traits.js\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <div id=\"route-controller\">\n        <Switch>\n          <Route path=\"/rules\" component={CoreRules} />\n          <Route path=\"/skill checks\" component={SkillChecks} />\n          <Route path=\"/combat actions\" component={CombatActions} />\n          <Route path=\"/strains\" component={Strains} />\n          <Route path=\"/traits\" component={Traits} />\n          <Route path=\"/character sheet\" component={CharacterSheet} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport './header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <h1 className=\"header__title\">Flax</h1>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NavLink extends Component {\n    render() {\n        let link = `/${this.props.title}`;\n        let title = this.props.title.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n        return (\n            <li onMouseOver={() => this.props.onHover(title)}\n              onMouseOut={() => this.props.onHover(null)}><Link to={link}>{title}</Link>\n            </li>\n        )\n    }\n}\n\nexport default NavLink;\n","import React, {Component} from 'react';\nimport { observer, inject } from \"mobx-react\";\nimport { Link } from 'react-router-dom';\n\n\nconst ChapterList = inject(\"rootStore\")(observer(\nclass ChapterList extends Component {\n    render() {\n        let numberOfChapters = this.props.rootStore.rulesStore.chapterList.length;\n        let chapterNumberCutOff = Math.round(numberOfChapters/2);\n\n        let chaptersFirstHalf = [];\n        let chaptersSecondHalf = [];\n\n        this.props.rootStore.rulesStore.chapterList.forEach((title, index) => {\n            let link = `/rules/${title}`;\n            let returnValue = (\n                <Link to={link} key={title}\n                className=\"chapterLink hoverableNav\"\n                onClick={() => this.props.onHover(null)}>\n\n                    {title}\n                </Link>\n            )\n            if (index < chapterNumberCutOff)  chaptersFirstHalf.push(returnValue);\n            else chaptersSecondHalf.push(returnValue);\n        })\n        return (\n            <div className=\"chapterSectionsContainer\">\n                <div>{chaptersFirstHalf}</div>\n                <div>{chaptersSecondHalf}</div>\n            </div>\n        )\n    }\n}\n))\n\nexport default ChapterList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ToolButton extends Component {\n    onClick = () => {\n        console.log('CLicked');\n    }\n    render() {\n\n        return (\n                <Link to={this.props.link} className=\"toolButton hoverableNav\" onClick={() => this.props.onHover(this.props.title)}>\n                    <h3>\n                        {this.props.name}\n                    </h3>\n                </Link>\n        )\n    }\n}\n\nexport default ToolButton;\n","import React, {Component} from 'react';\nimport ToolButton from './toolButton.js';\n\nclass RulesTools extends Component {\n    render() {\n\n        return (\n            <div className=\"rulesToolsContainer\">\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Strains\"\n                    link=\"/strains\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Traits\"\n                    link=\"/traits\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Skill Checks\"\n                    link=\"/skill checks\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Combat Actions\"\n                    link=\"/combat actions\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Equipment\"\n                    link=\"\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Arcane Powers\"\n                    link=\"\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default RulesTools;\n","import React, {Component} from 'react';\nimport ChapterList from './chapterList.js';\nimport RulesTools from './rulesTools.js';\n\nclass ExtendedNav extends Component {\n    render() {\n        let hoveredClass = this.props.hoverDisplay === this.props.title ? \"extendedNav__container\" : \"hidden\";\n        // hoveredClass = \"extendedNav__container\"\n        return (\n            <div\n                className={hoveredClass}\n                onMouseOver={() => this.props.onHover(this.props.title)}\n                onMouseOut={() => this.props.onHover(null)}\n            >\n                <div className=\"extendedNav__items__container\">\n                    <ChapterList\n                        onHover={this.props.onHover} />\n                    <RulesTools\n                        onHover={this.props.onHover} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ExtendedNav;\n","import React, { Component } from \"react\";\nimport \"./topNav.css\";\nimport NavLink from \"./navLink.js\";\nimport ExtendedNav from \"./extendedNav.js\";\n\nclass TopNav extends Component {\n  state = {\n    hovering: null,\n    hoverDisplay: null\n  };\n\n  onHover = target => {\n    this.setState({ hovering: target }, () => {\n      if (target) this.setHoverDisplay();\n      else\n        setTimeout(() => {\n          this.setHoverDisplay();\n        }, 100);\n    });\n  };\n\n  setHoverDisplay = () => {\n    this.setState({ hoverDisplay: this.state.hovering });\n  };\n\n  render() {\n    return (\n      <div className=\"topNav\">\n        <ul className=\"topNav__list\">\n          <NavLink title=\"Rules\" onHover={this.onHover} />\n          <NavLink title=\"Character Sheet\" onHover={this.onHover} />\n        </ul>\n        <ExtendedNav\n          hoverDisplay={this.state.hoverDisplay}\n          onHover={this.onHover}\n          title={\"Rules\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopNav;\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    rawDocs = {};\n    chapterList = [];\n    test = \"THIS IS A TEST STRING.\"\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/documentation');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.rawDocs = body.DOCUMENTATION;\n        this.chapterList = this.parseChapters(body.DOCUMENTATION)\n    };\n\n    parseChapters = documention => {\n        return Object.keys(documention)\n        .filter(key => key.split('/').length === 2)\n        .map(key => key.split('/')[1].split(\" \")\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \")\n    )\n}\n\n}\n\nexport default decorate(RulesStore, {\n    chapterList: observable,\n    rawDocs: observable,\n    test: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass CombatActionsStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    combatActions = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/combatactions');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.combatActions = body.CombatActions;\n    };\n}\n\nexport default decorate(CombatActionsStore, {\n    combatActions: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass SkillChecksStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    skillChecks = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/skillChecks');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.skillChecks = body.SkillChecks;\n    };\n}\n\nexport default decorate(SkillChecksStore, {\n    skillChecks: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    strains = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/strains');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.strains = body.Strains;\n    };\n}\n\nexport default decorate(RulesStore, {\n    strains: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    traits = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/traits');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.traits = body.Traits;\n    };\n}\n\nexport default decorate(RulesStore, {\n    traits: observable\n});\n","import RulesStore from \"./rulesStore.js\";\nimport CombatActionsStore from \"./combatActionsStore.js\";\nimport SkillChecksStore from \"./skillChecksStore.js\";\nimport StrainsStore from \"./strainsStore.js\";\nimport TraitsStore from \"./traitsStore.js\";\n\nexport class RootStore {\n  constructor() {\n      this.rulesStore = new RulesStore(this);\n      this.combatActionsStore = new CombatActionsStore(this);\n      this.skillChecksStore = new SkillChecksStore(this);\n      this.strainsStore = new StrainsStore(this);\n      this.traitsStore = new TraitsStore(this);\n  }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nimport Routes from './routes.js';\nimport Header from './header/header.js';\nimport TopNav from './topNav/topNav.js';\n\nimport {Provider} from \"mobx-react\";\nimport rootStore from \"./stores/rootStore.js\";\n\nimport './index.css';\n\n\nReactDOM.render(\n    <Provider rootStore={rootStore}>\n        <Router basename={'/'}>\n            <Header />\n            <TopNav />\n            <Routes />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}