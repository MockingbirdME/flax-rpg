{"version":3,"sources":["serviceWorker.js","contexts/character.js","characterSheet/attributeBox.js","characterSheet/attributeStat.js","characterSheet/characterSheetHeader.js","characterSheet/resourceDisplay.js","characterSheet/secondarySkillItem.js","characterSheet/skillBox.js","characterSheet/characterSheet.js","character/characterNameField.js","character/characterLevelTracker.js","contexts/strain.js","character/characterStrainPicker.js","character/characterAttributeMinMaxPicker.js","contexts/trait.js","contexts/skill.js","character/characterTypeSkillPicker.js","character/characterTypePicker.js","character/characterTraitPicker.js","character/characterTraitsPicker.js","character/createOrEditChar.js","dataDisplay/dataDisplayTitleSection.js","dataDisplay/dataDisplayFilterField.js","dataDisplay/dataDisplayFilterSection.js","dataDisplay/dataDisplayListItem.js","dataDisplay/dataDisplayListSection.js","dataDisplay/dataDisplay.js","dataDisplay/combatActions.js","documentation/sideBar.js","documentation/coreRules.js","home/home.js","dataDisplay/skillChecks.js","dataDisplay/strains.js","dataDisplay/traits.js","routes.js","header/header.js","topNav/navLink.js","topNav/chapterList.js","topNav/toolButton.js","topNav/rulesTools.js","topNav/extendedNav.js","topNav/topNav.js","stores/rulesStore.js","stores/combatActionsStore.js","stores/skillChecksStore.js","stores/strainsStore.js","stores/traitsStore.js","stores/rootStore.js","index.js"],"names":["Boolean","window","location","hostname","match","CharacterContext","React","createContext","lastCallUID","CharacterContextProvider","props","initialBaseCharData","id","name","level","strain","options","strainOptions","traitsList","minMaxAttributes","bonus","penalty","baseAttributeModifiers","body","reflexes","perception","mind","any","characterType","baseSkills","expertSkills","useState","characters","setCharacters","buildCharacter","character","a","callId","uuid","characterTypeIsComplete","baseCharData","JSON","parse","stringify","unshift","method","headers","fetch","response","json","status","Error","message","console","log","this","initializeEmptyCharacter","calculatedStats","Provider","value","tempID","Object","keys","length","newCharacter","constructedCharData","setCharacterName","setCharacterLevel","adjustment","setCharacterMinMaxAttributes","type","index","attribute","map","isNaN","setCharacterStrain","strainName","setCharacterStrainOption","optionName","optionValue","setCharacterType","currentCharacterTypeIndex","indexOf","trait","splice","requirements","setCharacterTypeOption","optionCatigory","skillName","secondarySkillIndex","secondarySkill","traitOption","secondarySkills","setCharacterTrait","children","count","every","skill","secondarySkillsEach","AttributeBox","state","modifier","className","Component","AttributeStat","blankSheet","stats","target","currentStat","step","CharacterSheetHeader","ResourceDisplay","current","max","currentDisplay","maxDisplay","SecondarySkillItem","placeholder","SkillBox","secondarySkillsDiv","secondarySkillCount","push","key","CharacterSheet","charContext","useContext","charId","params","characterStats","resistances","otherAttributes","charAt","toUpperCase","slice","primaryAttributes","speed","initiative","size","reach","defenseCurrent","defenseMax","staminaCurrent","staminaMax","woundsCurrent","woundsMax","CharacterNameField","context","useParams","style","marginLeft","fontSize","onChange","ev","event","CharacterLevelTacker","StrainContext","StrainContextProvider","strains","setStrains","loadStrains","Strains","useEffect","CharacterStrainPicker","disabled","hidden","display","concat","strainId","displayName","paddingLeft","option","changeStrain","StrainOption","CharacterAttributeMinMaxPicker","changeAttributeMinMaxOptions","bonusAttributePicker","penaltyAttributesOptions","filter","penaltyAttributesPicker","textAlign","TraitContext","TraitContextProvider","traits","setTraits","Traits","SkillContext","SkillContextProvider","skills","setSkills","loadSkills","Skills","CharacterTypeSkillPicker","characterTypeOptions","selectedSkill","nonOptionalSkills","includes","primarySkillOptions","skillId","selectedPrimarySkill","primarySkillSelector","secondaryCount","Array","baseSkill","baseSkillIndex","SecondarySkillPicker","secondarySkillList","secondarySkillOptions","selectedSecondarySkill","CharacterTypePicker","showOptions","setShowOptions","selectedCharacterType","traitId","baseSkillPickers","margin","expertSkillPickers","optionsToggler","color","onClick","skillPickers","flexDirection","justifyContent","maxWidth","changeCharacterType","CharacterTraitPicker","selectedTrait","defaultOptions","availableTraits","some","eligibleTrait","changeSelectedCharacterTrait","CharacterTraitsPicker","traitEntitlements","total","allotted","width","alignItems","consumed","heroic","epic","CreateOrEditChar","history","padding","borderLeft","DataDisplayTitleSection","to","rulesLink","DataDisplayFilterField","field","selectCheckmark","filters","sort","elm","fieldsList","fields","item","changeFilter","checked","shouldBeChecked","divCount","Math","ceil","divCountLength","optionDivs","i","minWidth","DataDisplayFilterSection","searchedName","setState","updateFilters","data","array","forEach","filterableFields","filterFields","getFields","nameSingular","resetFilters","DataDisplayListItem","toggleExpanded","expandInPlace","expanded","renderSelected","expandedClass","plusMinus","faMinus","faPlus","expandedContent","renderedContent","description","displayString","isArray","join","icon","dangerouslySetInnerHTML","__html","DataDisplayListSection","inject","observer","sortBy","sortAssending","displayDocumentation","nextprops","nextstate","b","fieldA","toString","fieldB","stringA","toLowerCase","stringB","placeholderA","list","itemKey","filterName","extension","documentationExtension","rootStore","rulesStore","rawDocs","faSort","headerRow","displayClass","listHtml","applyFilters","sorter","dataKey","renderedDisplay","DataDisplay","filterDisplay","hideFilter","namePlural","sortableFields","withRouter","CombatActions","combatActionsStore","combatActions","SideBar","CoreRules","renderedDoc","pathname","Header","href","SkillChecks","skillChecksStore","skillChecks","strainsStore","traitsStore","Routes","path","component","exact","Home","NavLink","link","onMouseOver","onHover","title","onMouseOut","ChapterList","numberOfChapters","chapterList","chapterNumberCutOff","round","chaptersFirstHalf","chaptersSecondHalf","returnValue","ToolButton","RulesTools","ExtendedNav","hoveredClass","hoverDisplay","TopNav","hovering","setHoverDisplay","setTimeout","decorate","test","callDocumentationAPI","DOCUMENTATION","parseChapters","documention","split","word","observable","RulesStore","CombatActionsStore","SkillChecksStore","StrainsStore","TraitsStore","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3da65c1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {useState} from \"react\";\nimport { uuid } from \"uuidv4\";\n\nconst CharacterContext = React.createContext();\n\nexport default CharacterContext;\n\nconst lastCallUID = {};\n\nexport const CharacterContextProvider = props => {\n  const initialBaseCharData = {\n    id: null,\n    name: null,\n    level: 1,\n    strain: {name: \"\", options: {}, strainOptions: []},\n    traitsList: [],\n    minMaxAttributes: {\n      bonus: \"\",\n      penalty: [\"\", \"\"]\n    },\n    baseAttributeModifiers: {\n      body: 0,\n      reflexes: 0,\n      perception: 0,\n      mind: 0,\n      any: 0\n    },\n    characterType: {\n      name: \"\",\n      options: {\n        baseSkills: [],\n        expertSkills: []\n      }\n    }\n  };\n  \n  const [characters, setCharacters] = useState({});\n  \n  const initializeEmptyCharacter = (id) => {\n    const tempID = id || Object.keys(characters).length;\n    const newCharacter = {\n      baseCharData: { ...initialBaseCharData },\n      constructedCharData: {}\n    };\n    setCharacters({...characters, [tempID]: newCharacter});\n    return tempID;\n  };\n  \n  const setCharacterName = (id, name) => {\n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    character.baseCharData.name = name;\n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  const setCharacterLevel = (id, adjustment) => {\n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    character.baseCharData.level = adjustment;\n    if (character.baseCharData.level < 1) character.baseCharData.level = 1;\n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  const setCharacterMinMaxAttributes = (id, type, index, attribute) => {\n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    console.log(id, type, index, attribute);\n    console.log(character.baseCharData);\n    if (type === \"bonus\") {\n      if (!attribute) {\n        if (character.baseCharData.minMaxAttributes.bonus) character.baseCharData.baseAttributeModifiers[character.baseCharData.minMaxAttributes.bonus]--;\n        character.baseCharData.minMaxAttributes.penalty.map(value => {\n          if (value) character.baseCharData.baseAttributeModifiers[value]++;\n          return null;\n        });\n      }\n      character.baseCharData.baseAttributeModifiers[attribute]++;\n      character.baseCharData.minMaxAttributes.bonus = attribute;\n    }\n    else if (!isNaN(index)) {\n      if (character.baseCharData.minMaxAttributes.penalty[index]) character.baseCharData.baseAttributeModifiers[character.baseCharData.minMaxAttributes.penalty[index]]++;\n      character.baseCharData.baseAttributeModifiers[attribute]--;\n      character.baseCharData.minMaxAttributes.penalty[index] = attribute;\n    }\n    \n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  const setCharacterStrain = (id, strainName, strainOptions) => {\n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    character.baseCharData.strain.name = strainName;\n    character.baseCharData.strain.strainOptions = strainOptions;\n    \n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  const setCharacterStrainOption = (id, optionName, optionValue) => {\n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    \n    if (!optionValue) delete character.baseCharData.strain.options[optionName];\n    else character.baseCharData.strain.options[optionName] = optionValue;\n    \n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  const setCharacterType = (id, type) => {    \n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    \n    // Get the current index of the character's Character Type trait.\n    const currentCharacterTypeIndex = character.baseCharData.traitsList.indexOf(trait => trait.type === \"Character Type\");\n    \n    // If a character trait was found remove it from the character's trait list.\n    if (currentCharacterTypeIndex !== -1) character.baseCharData.traitsList.splice(currentCharacterTypeIndex, 1);\n\n    character.baseCharData.characterType.name = type.name;\n    character.baseCharData.characterType.requirements = type.options || null;\n    \n    setCharacters({...characters, [id]: character});\n    \n    if (characterTypeIsComplete(character.baseCharData.characterType)) {\n      \n      setCharacters({...characters, [id]: character});\n      buildCharacter(id, character);\n    }\n    \n  };\n  \n  const setCharacterTypeOption = (id, optionCatigory, index, skillName, secondarySkillIndex, secondarySkill) => {    \n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n\n    const traitOption = character.baseCharData.characterType.options[optionCatigory][index] \n      ? character.baseCharData.characterType.options[optionCatigory][index] \n      : {name: \"\", secondarySkills: []};\n    \n    if (skillName) traitOption.name = skillName;\n    if (secondarySkillIndex || secondarySkillIndex === 0) traitOption.secondarySkills[secondarySkillIndex] = secondarySkill || \"\";\n\n    character.baseCharData.characterType.options[optionCatigory][index] = traitOption;\n    \n    setCharacters({...characters, [id]: character});\n    if (characterTypeIsComplete(character.baseCharData.characterType)) {\n      // Add the newly selected character trait as the first item in the character's trait list.\n      setCharacters({...characters, [id]: character});\n      buildCharacter(id, character);\n    }\n    \n  };\n  \n  const setCharacterTrait = (id, index, trait) => {    \n    if (!characters[id]) this.initializeEmptyCharacter(id);\n    const character = characters[id];\n    \n    character.baseCharData.traitsList[index] = trait;\n    \n    setCharacters({...characters, [id]: character});\n    buildCharacter(id, character);\n  };\n  \n  async function buildCharacter(id, character) {\n    const callId = uuid();\n    lastCallUID[id] = callId;\n    \n    // Use JSON parse/stringify to copy so we don't change the underlying data.\n    const baseCharData = JSON.parse(JSON.stringify(character.baseCharData));\n    \n    if (characterTypeIsComplete(baseCharData.characterType)) baseCharData.traitsList.unshift(character.baseCharData.characterType);\n    \n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(baseCharData)\n    };\n    \n    const response = await fetch('/api/v1/character/build', options);\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    if (lastCallUID[id] !== callId) console.log('Ignoring results from older API call');\n    else {\n      \n      if (!characters[id]) this.initializeEmptyCharacter(id);\n      const character = characters[id];\n      \n      console.log(body);\n      character.calculatedStats = body;\n      \n      setCharacters({...characters, [id]: character});\n    }\n  }\n  \n  return <CharacterContext.Provider value={{\n    characters,\n    initializeEmptyCharacter,\n    setCharacterName,\n    setCharacterLevel,\n    setCharacterMinMaxAttributes,\n    setCharacterStrain,\n    setCharacterStrainOption,\n    setCharacterType,\n    setCharacterTypeOption,\n    setCharacterTrait\n  }}>{props.children}</CharacterContext.Provider>;\n};\n\nfunction characterTypeIsComplete(characterType) {\n  const {name, options, requirements} = characterType;\n\n  if (!name) return false;\n  if (!requirements) return true;\n  \n  if (requirements.baseSkills) {\n    if (requirements.baseSkills.count !== options.baseSkills.length) return false;\n    if (!options.baseSkills.every(skill => skill.secondarySkills.length === requirements.baseSkills.secondarySkillsEach)) return false;\n  }\n  if (requirements.expertSkills) {\n    if (requirements.expertSkills.count !== options.expertSkills.length) return false;\n    if (!options.expertSkills.every(skill => skill.secondarySkills.length === requirements.expertSkills.secondarySkillsEach)) return false;\n  }\n  \n  return true;\n  \n}\n","import React, { Component } from \"react\";\n\nclass AttributeBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let {value} = this.props;\n\n    if (this.props.modifier) {\n      if (value >= 0) value = `+${value}`;\n      else value = `${value}`;\n    }\n\n    return (\n      <div className=\"character_sheet__attribute_box__container\">\n        <div className=\"character_sheet__attribute_box__title\" >\n          <h5>{this.props.name}</h5>\n        </div>\n        <div className=\"character_sheet__attribute_box__stat\">\n          <h4>{!isNaN(value) ? value : <span className=\"character_sheet__background_text\">value</span>}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AttributeBox;\n","import React, { } from \"react\";\n\nconst AttributeStat = props => {\n  const {blankSheet, stats, target = []} = props;\n\n  if (blankSheet) return <input type=\"text\" />;\n  \n  let value = \"\";\n  let index = 0;\n  let currentStat = {...stats};\n  \n  for (const step of target) {\n    if (!currentStat[step] && isNaN(currentStat[step])) break;\n    index++;\n    if (index >= target.length) value = currentStat[step];\n    else currentStat = currentStat[step];\n  }\n  \n  \n  return (\n    <span className=\"character_sheet__body__group__item__levels__level__boxed__stat\">{value}\n    </span>\n  );\n};\n\nexport default AttributeStat;\n","import React, { Component } from \"react\";\n\nconst CharacterSheetHeader = props =>{\n  console.log(props.name);\n  return (\n    <div className=\"character_sheet__header\">\n      <span className=\"character_sheet__header__section\">\n        <h3 className=\"character_sheet__header__label\">Name:</h3>\n        <h4>{props.name}</h4>\n      </span>\n      <span className=\"character_sheet__header__section\">\n        <h3 className=\"character_sheet__header__label\">Level:</h3>\n        <h4>{props.level}</h4>\n      </span>\n    </div>\n  );\n};\n\n\nexport default CharacterSheetHeader;\n","import React, { } from \"react\";\n\nconst ResourceDisplay = props => {\n  const {name, current, max} = props;  \n  \n  const currentDisplay = current\n    ? <span>{current}</span>\n    : <span className=\"character_sheet__hidden_text\">____</span>;\n  \n  const maxDisplay = max\n    ? <span>{max}</span>\n    : <span className=\"character_sheet__hidden_text\">____</span>;\n  \n  return (\n    <div className=\"character_sheet__body__group__item__tracker\">\n      <h5 className=\"character_sheet__body__resource_name\">\n        {name}\n      </h5>\n      <div className=\"character_sheet__body__group__item__stat\">\n        <h4 className=\"character_sheet__body__group__item__stat__tracker\">\n          {currentDisplay}\n          /\n          {maxDisplay}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default ResourceDisplay;\n","import React, { Component } from \"react\";\n\nclass SecondarySkillItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return (\n      <div className=\"character_sheet__body__group__item__levels__level character_sheet__body__secondary_skill\" >\n        <h6>\n          <span className=\"character_sheet__background_text\">\n            Secondary\n          </span>\n        </h6>\n        <input type=\"text\" placeholder=\"Rank\" />\n      </div>\n    );\n  }\n}\n\nexport default SecondarySkillItem;\n","import React, { Component } from \"react\";\n\nimport SecondarySkillItem from './secondarySkillItem.js';\n\nclass SkillBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    const secondarySkillsDiv = [];\n    for (let index = 0; index < this.props.secondarySkillCount; index++) {\n      secondarySkillsDiv.push(<SecondarySkillItem key={index} />);\n    }\n\n    return (\n      <div className=\"character_sheet__body__group__item\">\n        <div className=\"character_sheet__body__group__item__levels\">\n          <div className=\"character_sheet__body__group__item__levels__level character_sheet__body__primary_skill\">\n            <h5>\n              <span className=\"character_sheet__background_text\">\n                Skill Name\n              </span>\n            </h5>\n            <input type=\"text\" placeholder=\"Rank\" />\n          </div>\n          {secondarySkillsDiv}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillBox;\n","import React, { useContext, useEffect } from \"react\";\nimport CharacterContext from \"../contexts/character\";\nimport \"./characterSheet.css\";\n\nimport AttributeBox from \"./attributeBox\";\nimport AttributeStat from \"./attributeStat\";\nimport CharacterSheetHeader from \"./characterSheetHeader\";\nimport ResourceDisplay from \"./resourceDisplay\";\nimport SkillBox from \"./skillBox\";\n\nconst CharacterSheet = props => {\n  const charContext = useContext(CharacterContext);\n  const { charId } = props.match.params;\n\n  if (charId && !charContext.characters[charId]) return <div></div>;\n    \n  const blankSheet = !charId;  \n  const characterStats = (charContext.characters[charId] && charContext.characters[charId].calculatedStats) || {};\n  \n  const resistances = characterStats.otherAttributes && characterStats.otherAttributes.resistances \n    ? (\n      Object.keys(characterStats.otherAttributes.resistances).map(key => (\n        <div className=\"character_sheet__body__group__item__levels__level\">\n          <h6>{key.charAt(0).toUpperCase() + key.slice(1)}</h6>\n          <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"resistances\", key]} />\n        </div>\n      ))\n    )\n    : (\n      <span className=\"character_sheet__body__group__item__levels\">\n        <div className=\"character_sheet__body__group__item__levels__level\">\n          <h6>All Damage</h6>\n          <input type=\"text\" />\n        </div>\n        <div className=\"character_sheet__body__group__item__levels__level\">\n          <h6>Bludgeoning</h6>\n          <input type=\"text\" />\n        </div>\n        <div className=\"character_sheet__body__group__item__levels__level\">\n          <h6>Penetrating</h6>\n          <input type=\"text\" />\n        </div>\n      </span>\n    );\n\n  return (\n    <div className=\"character_sheet__container\">\n      <CharacterSheetHeader name={characterStats.name} level={characterStats.level}/>\n      <div className=\"character_sheet__body\">\n        {\n          // Attributes and skills.\n        }\n        <div className=\"character_sheet__body__content\">\n          {\n            // Attributes column\n          }\n          <div className=\"character_sheet__body__group character_sheet__body__group_attributes\">\n            <div className=\"character_sheet__body__attributes\">\n              <AttributeBox name=\"body\" value={characterStats.primaryAttributes && characterStats.primaryAttributes.body} modifier={true} />\n              <AttributeBox name=\"reflexes\" value={characterStats.primaryAttributes && characterStats.primaryAttributes.reflexes} modifier={true} />\n              <AttributeBox name=\"perception\" value={characterStats.primaryAttributes && characterStats.primaryAttributes.perception} modifier={true} />\n              <AttributeBox name=\"mind\" value={characterStats.primaryAttributes && characterStats.primaryAttributes.mind} modifier={true} />\n\n              <AttributeBox name=\"speed\" value={characterStats.otherAttributes && characterStats.otherAttributes.speed} />\n              <AttributeBox name=\"initiative\" value={characterStats.otherAttributes && characterStats.otherAttributes.initiative} />\n              <AttributeBox name=\"size\" value={characterStats.otherAttributes && characterStats.otherAttributes.size} modifier={true} />\n              <AttributeBox name=\"reach\" value={characterStats.otherAttributes && characterStats.otherAttributes.reach} modifier={true} />\n            </div>\n          </div>\n          {\n            // Defense column\n          }\n          <div className=\"character_sheet__body__group   character_sheet__body__group_wrap\">\n            <div className=\"character_sheet__body__group__item\">\n              <ResourceDisplay \n                name=\"Defense\" \n                current={characterStats.otherAttributes && characterStats.otherAttributes.defenseCurrent}\n                max={characterStats.otherAttributes && characterStats.otherAttributes.defenseMax} />\n              <div className=\"character_sheet__body__group__item__levels\">\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Max Defense</h6>\n                  <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"defenseMax\"]} />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Melee Bonus</h6>\n                  <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"defenseBonusMelee\"]} />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Range Bonus</h6>\n                  <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"defenseBonusRanged\"]} />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Mental Bonus</h6>\n                  <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"defenseBonusMental\"]} />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels\">\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Armor Value</h6>\n                    <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"armorValue\"]} />\n                  </div>\n                  <h5 className=\"character_sheet__body__resource_name_secondary\">\n                    Resistances:\n                  </h5>\n                  {resistances}\n                </div>\n              </div>\n            </div>\n\n            <SkillBox secondarySkillCount={2} />\n            <SkillBox secondarySkillCount={2} />\n          </div>\n          {\n            // Stamina column\n          }\n          <div className=\"character_sheet__body__group character_sheet__body__group_wrap\">\n            <div className=\"character_sheet__body__group__item\">\n              <div className=\"character_sheet__body__group__item__tracker\">\n                <ResourceDisplay \n                  name=\"Stamina\" \n                  current={characterStats.otherAttributes && characterStats.otherAttributes.staminaCurrent}\n                  max={characterStats.otherAttributes && characterStats.otherAttributes.staminaMax} />\n                <div className=\"character_sheet__body__group__item__levels\">\n                  <div className=\"character_sheet__body__group__item__levels__level\">\n                    <h6>Max Stamina</h6>\n                    <AttributeStat blankSheet={blankSheet} stats={characterStats} target={[\"otherAttributes\", \"staminaMax\"]} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <SkillBox secondarySkillCount={3} />\n            <SkillBox secondarySkillCount={2} />\n            <SkillBox secondarySkillCount={2} />\n          </div>\n          {\n            // Wounds column\n          }\n          <div className=\"character_sheet__body__group character_sheet__body__group_wrap\">\n            <div className=\"character_sheet__body__group__item\">\n              <ResourceDisplay \n                name=\"Wounds\" \n                current={characterStats.otherAttributes && characterStats.otherAttributes.woundsCurrent}\n                max={characterStats.otherAttributes && characterStats.otherAttributes.woundsMax} />\n              <div className=\"character_sheet__body__group__item__levels\">\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Wounded</h6>\n                  <input type=\"checkbox\" />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Badly Wounded</h6>\n                  <input type=\"checkbox\" />\n                </div>\n                <div className=\"character_sheet__body__group__item__levels__level\">\n                  <h6>Mortaly Wounded</h6>\n                  <input type=\"checkbox\" />\n                </div>\n              </div>\n            </div>\n\n            <SkillBox secondarySkillCount={3} />\n            <SkillBox secondarySkillCount={2} />\n            <SkillBox secondarySkillCount={2} />\n          </div>\n        </div>\n      </div>\n      <div className=\"character_sheet__notes\">\n        <div className=\"paper\" />\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterSheet;\n","import React, { useContext } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\n\n\nconst CharacterNameField = props => {\n  const context = useContext(CharacterContext);\n  const { charId } = useParams();\n\n  if (!context.characters[charId]) return <div></div>;\n\n  const changeName = event => {\n    context.setCharacterName(charId, event.target.value);\n  };\n\n  return (\n    <div className=\"\">\n      <h2>\n        Name:\n        <input\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          placeholder=\"My Character\"\n          value={context.characters[charId].baseCharData.name || \"\"}\n          onChange={ev => changeName(ev)}\n        />\n      </h2>\n    </div>\n  );\n};\n\nexport default CharacterNameField;\n","import React, { useContext } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\n\n\nconst CharacterLevelTacker = props => {\n  const context = useContext(CharacterContext);\n  const { charId } = useParams();\n\n  if (!context.characters[charId]) return <div></div>;\n\n  const changeName = event => {\n    context.setCharacterLevel(charId, event.target.value);\n  };\n\n  return (\n    <div className=\"\">\n      <h2>\n        Level:\n        <input\n          type=\"number\"\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          placeholder=\"My Character\"\n          value={context.characters[charId].baseCharData.level}\n          onChange={ev => changeName(ev)}\n        />\n      </h2>\n    </div>\n  );\n};\n\nexport default CharacterLevelTacker;\n","import React, {useState, useEffect} from \"react\";\n\nconst StrainContext = React.createContext();\n\nexport default StrainContext;\n\nexport const StrainContextProvider = props => {  \n  const [strains, setStrains] = useState({});\n  \n  const loadStrains = async () => {\n    const response = await fetch('/strains');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    setStrains(body.Strains);\n  };\n  \n  useEffect(() => {\n    loadStrains();\n  }, []);\n  \n  \n  return <StrainContext.Provider value={{\n    strains\n  }}>{props.children}</StrainContext.Provider>;\n};\n","import React, { useContext } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport StrainContext from \"../contexts/strain\";\n\n\nconst CharacterStrainPicker = props => {\n  const charContext = useContext(CharacterContext);\n  const strainContext = useContext(StrainContext);\n  const {strains} = strainContext;\n  const { charId } = useParams();\n  \n  if (!charContext.characters[charId]) return <div></div>;\n\n  const changeStrain = event => {\n    const strain = strains[event.target.value];\n    charContext.setCharacterStrain(charId, event.target.value, strain.options);\n  };\n  \n  const options = Object.keys(strains).length \n    ? [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select a strain --</option>].concat(Object.keys(strains).map(strainId => (\n      <option key={strainId} value={strainId}>\n        {strains[strainId].displayName}\n      </option>\n    )))\n    : [];\n\n  const strainOptions = charContext.characters[charId].baseCharData.strain.strainOptions && charContext.characters[charId].baseCharData.strain.strainOptions.length \n    ? (\n      <div style={{paddingLeft: \"2rem\"}}>\n        {charContext.characters[charId].baseCharData.strain.strainOptions.map((option, index) => <StrainOption displayName={option.displayName} options={option.options} name={option.name} key={index}/>)}\n      </div>\n    ) : \"\";\n\n  return (\n    <div className=\"\">\n      <h2>\n        Strain:\n        <select\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          value={charContext.characters[charId].baseCharData.strain.name || \"\"}\n          onChange={ev => changeStrain(ev)}\n        >\n          {options}\n        </select>\n      </h2>\n      {strainOptions}\n    </div>\n  );\n};\n\nexport default CharacterStrainPicker;\n\n\nconst StrainOption = props => {\n  const charContext = useContext(CharacterContext);\n  const { charId } = useParams();\n\n  const changeStrainOption = event => {\n    charContext.setCharacterStrainOption(charId, props.name, event.target.value);\n  };\n\n  const options = [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select an option --</option>].concat(props.options.map(option => <option value={option.value} key={option.value} >{option.displayName}</option>));\n\n  return (\n    <div className=\"\">\n      <h4>\n        {props.displayName}\n        <select\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          value={charContext.characters[charId].baseCharData.strain.options[props.name] || \"\"}\n          onChange={ev => changeStrainOption(ev)}\n        >\n          {options}\n        </select>\n      </h4>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\n\n\nconst CharacterAttributeMinMaxPicker = props => {\n  const context = useContext(CharacterContext);\n  const { charId } = useParams();\n\n  if (!context.characters[charId]) return <div></div>;\n\n  const changeAttributeMinMaxOptions = (type, index, event) => {\n    context.setCharacterMinMaxAttributes(charId, type, index, event.target.value);\n  };\n  \n  const bonusAttributePicker = (\n    <div>\n      <h4>Bonus Attribute (optional)</h4>\n      <select\n        style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n        value={context.characters[charId].baseCharData.minMaxAttributes.bonus || \"\"}\n        onChange={ev => changeAttributeMinMaxOptions(\"bonus\", null, ev)}\n      >\n        <option value={\"\"} key=\"default\">No Attribute Bonus</option>\n        <option value=\"body\" key=\"body\">+1 Body</option>\n        <option value=\"reflexes\" key=\"reflexes\">+1 Reflexes</option>\n        <option value=\"perception\" key=\"perception\">+1 Perception</option>\n        <option value=\"mind\" key=\"mind\">+1 Mind</option>\n      </select>\n    </div>\n  );\n  \n  const penaltyAttributesOptions = [\n    <option disabled hidden style={{display: \"none\"}} value={\"\"} key=\"default\">Select one</option>,\n    <option value=\"body\" key=\"body\">-1 Body</option>,\n    <option value=\"reflexes\" key=\"reflexes\">-1 Reflexes</option>,\n    <option value=\"perception\" key=\"perception\">-1 Perception</option>,\n    <option value=\"mind\" key=\"mind\">-1 Mind</option>\n  ].filter(option => option.key !== context.characters[charId].baseCharData.minMaxAttributes.bonus);\n\n  \n  const penaltyAttributesPicker = context.characters[charId].baseCharData.minMaxAttributes.bonus \n    ? (\n      <div>\n        <h4 style={{textAlign: \"center\"}}>Penalty Attributes</h4>\n        <select\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          value={context.characters[charId].baseCharData.minMaxAttributes.penalty[0] || \"\"}\n          onChange={ev => changeAttributeMinMaxOptions(\"penalty\", 0, ev)}\n        >\n          {penaltyAttributesOptions}\n        </select>\n        <select\n          style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n          value={context.characters[charId].baseCharData.minMaxAttributes.penalty[1] || \"\"}\n          onChange={ev => changeAttributeMinMaxOptions(\"penalty\", 1, ev)}\n        >\n          {penaltyAttributesOptions}\n        </select>\n      </div>\n    ) : \"\";\n\n  return (\n    <div className=\"\" style={{display: \"flex\"}} >\n      <div style={{display: \"flex\"}}>\n        {bonusAttributePicker}{penaltyAttributesPicker}\n      </div>\n      \n    </div>\n  );\n};\n\nexport default CharacterAttributeMinMaxPicker;\n","import React, {useState, useEffect} from \"react\";\n\nconst TraitContext = React.createContext();\n\nexport default TraitContext;\n\nexport const TraitContextProvider = props => {  \n  const [traits, setTraits] = useState({});\n\n  const loadStrains = async () => {\n    const response = await fetch('/traits');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    setTraits(body.Traits);\n  };\n  \n  useEffect(() => {\n    loadStrains();\n  }, []);\n  \n  \n  return <TraitContext.Provider value={{\n    traits\n  }}>{props.children}</TraitContext.Provider>;\n};\n","import React, {useState, useEffect} from \"react\";\n\nconst SkillContext = React.createContext();\n\nexport default SkillContext;\n\nexport const SkillContextProvider = props => {  \n  const [skills, setSkills] = useState({});\n  \n  const loadSkills = async () => {\n    const response = await fetch('/skills');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    setSkills(body.Skills);\n  };\n  \n  useEffect(() => {\n    loadSkills();\n  }, []);\n  \n  \n  return <SkillContext.Provider value={{\n    skills\n  }}>{props.children}</SkillContext.Provider>;\n};\n","import React, { useContext, Fragment } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport SkillContext from \"../contexts/skill\";\n\nconst CharacterTypeSkillPicker = props => {\n  const charContext = useContext(CharacterContext);\n  const skillContext = useContext(SkillContext);\n  const {skills} = skillContext;\n  const { charId } = useParams();\n  \n  if (!charContext.characters[charId]) return <div></div>;\n\n  const selectSkill = event => {\n    charContext.setCharacterTypeOption(charId, props.level, props.index, event.target.value);\n  };\n  \n  const characterTypeOptions = charContext.characters[charId].baseCharData.characterType.options;\n  \n  const selectedSkill = characterTypeOptions[props.level][props.index];\n  \n  const nonOptionalSkills = Object.keys(skills).filter((key, index) => {\n    const otherSkillsAtLevel = characterTypeOptions[props.level].map(option => option.name).filter((skill, index) => index !== props.index);\n\n    if (otherSkillsAtLevel.includes(key)) return true;\n    if (props.level === \"expertSkills\") {\n      const selectedBaseSkills = characterTypeOptions.baseSkills.map(skill => skill.name);\n      if (!selectedBaseSkills.includes(key)) return true;\n    }\n    return false;\n    \n  });\n  \n  const primarySkillOptions = Object.keys(skills).length \n    ? [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select an option --</option>].concat(Object.keys(skills)\n      .filter(key => !nonOptionalSkills.includes(key))\n      .map(skillId => (\n        <option key={skillId} value={skillId}>\n          {skills[skillId].displayName}\n        </option>\n      )))\n    : [];\n    \n  const selectedPrimarySkill = selectedSkill && selectedSkill.name;\n    \n  const primarySkillSelector = primarySkillOptions.length > 1\n    ? (\n      <select\n        style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n        value={selectedPrimarySkill || \"\"}\n        onChange={ev => selectSkill(ev)}\n      >\n        {primarySkillOptions}\n      </select>\n    ) : \"\";\n  \n  const secondarySkills = props.secondaryCount \n    ? (\n      <Fragment>\n        {[...Array(props.secondaryCount)].map((value, index) => <SecondarySkillPicker baseSkill={selectedPrimarySkill} key={index} index={index} level={props.level} baseSkillIndex={props.index} />)}\n      </Fragment>\n    ) : \"\";\n\n  return (\n    <div className=\"\" style={{paddingLeft: \"2rem\"}}>\n      <h4>\n        {primarySkillOptions.length > 1\n          ? (\n            \"Primary Skill:\",\n            primarySkillSelector\n          ) : <p>--- Please select at least one {props.level === \"expertSkills\" ? \"Base\" : \"Lower Level\"} skill ---</p>}\n        \n      </h4>\n      {selectedPrimarySkill \n        ? (\n          <Fragment>\n            <p>\n              {`Secondary Skill${props.secondaryCount > 1 ? 's' : ''}:`}\n            </p> \n            {secondarySkills}\n          </Fragment>\n        ) \n        : \"\"}\n    </div>\n  );\n};\n\nexport default CharacterTypeSkillPicker;\n\n\nconst SecondarySkillPicker = props => {\n  const charContext = useContext(CharacterContext);\n  const skillContext = useContext(SkillContext);\n  const {skills} = skillContext;\n  const { charId } = useParams();\n  \n  if (!charContext.characters[charId]) return <div></div>;\n\n  const selectSecondarySkill = event => {\n    charContext.setCharacterTypeOption(charId, props.level, props.baseSkillIndex, null, props.index, event.target.value);\n  };\n  \n  const characterTypeOptions = charContext.characters[charId].baseCharData.characterType.options;\n\n  const selectedSkill = characterTypeOptions[props.level][props.baseSkillIndex];\n  \n  const nonOptionalSkills = Object.keys(skills).filter((key, index) => {\n    const otherSkillsAtLevel = characterTypeOptions[props.level].map(option => option.name).filter((skill, index) => index !== props.index);\n\n    if (otherSkillsAtLevel.includes(key)) return true;\n    if (props.level === \"expertSkills\") {\n      const selectedBaseSkills = characterTypeOptions.baseSkills.map(skill => skill.name);\n      if (!selectedBaseSkills.includes(key)) return true;\n    }\n    return false;\n    \n  });\n  \n  const {secondarySkills} = skills[props.baseSkill];\n  \n  const secondarySkillList = Object.keys(secondarySkills).filter(key => {\n    const otherSelectedSecondarySkills = characterTypeOptions[props.level][props.baseSkillIndex].secondarySkills.filter((skill, index) => index !== props.index);\n    \n    return !otherSelectedSecondarySkills.includes(key);\n  });\n  \n  const secondarySkillOptions = Object.keys(secondarySkillList).length \n    ? [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select an option --</option>].concat(secondarySkillList\n      .filter(key => !nonOptionalSkills.includes(key))\n      .map(skillId => (\n        <option key={skillId} value={skillId}>\n          {secondarySkills[skillId].displayName}\n        </option>\n      )))\n    : [];\n    \n  const selectedSecondarySkill = selectedSkill && selectedSkill.secondarySkills[props.index];\n  \n  const secondarySkillSelector = (\n    <select\n      style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n      value={selectedSecondarySkill || \"\"}\n      onChange={ev => selectSecondarySkill(ev)}\n    >\n      {secondarySkillOptions}\n    </select>\n  );\n  \n  return secondarySkillSelector;\n};\n","import React, { useContext, useState, Fragment } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport TraitContext from \"../contexts/trait\";\n\nimport SkillPicker from \"./characterTypeSkillPicker\";\n\n\nconst CharacterTypePicker = props => {\n  const [showOptions, setShowOptions] = useState(true); \n  const charContext = useContext(CharacterContext);\n  const traitContext = useContext(TraitContext);\n  const {traits} = traitContext;\n  const { charId } = useParams();\n  \n  if (!charContext.characters[charId]) return <div></div>;\n    \n  const selectedCharacterType = charContext.characters[charId].baseCharData.characterType.name ? traits[charContext.characters[charId].baseCharData.characterType.name] : null;\n\n  const changeCharacterType = event => {\n    const trait = {name: event.target.value, options: traits[event.target.value].options};\n    charContext.setCharacterType(charId, trait);\n  };\n  \n  const options = Object.keys(traits).length \n    ? [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select a character type --</option>].concat(Object.keys(traits)\n      .filter(traitId => traits[traitId].type === \"Character Type\")\n      .map(traitId => (\n        <option key={traitId} value={traitId}>\n          {traits[traitId].displayName}\n        </option>\n      )))\n    : [];\n    \n  const baseSkillPickers = selectedCharacterType && selectedCharacterType.options.baseSkills \n    ? (\n      <div>\n        <h4 style={{margin: \"0 0 0 1rem\"}}>Select Base Skills</h4>\n        <ul>\n          {[...Array(selectedCharacterType.options.baseSkills.count)].map((value, index) => <li><SkillPicker level=\"baseSkills\" key={index} index={index} secondaryCount={selectedCharacterType.options.baseSkills.secondarySkillsEach} /></li>)}\n        </ul>\n        \n        \n      </div>\n    ) : \"\";\n    \n  const expertSkillPickers = selectedCharacterType && selectedCharacterType.options.expertSkills && selectedCharacterType.options.expertSkills.count \n    ? (\n      <div>\n        <h4 style={{margin: \"0 0 0 1rem\"}}>Select Expert Skills</h4>\n        <ul>\n          {[...Array(selectedCharacterType.options.expertSkills.count)].map((value, index) => <li><SkillPicker level=\"expertSkills\" key={index} index={index} secondaryCount={selectedCharacterType.options.expertSkills.secondarySkillsEach} /></li>)}\n        </ul>\n      </div>\n    ) : \"\";\n    \n  const optionsToggler = charContext.characters[charId].baseCharData.characterType.name\n    ? <p style={{margin: \"auto\", color: \"grey\", size: \"small\"}} onClick={ev => setShowOptions(!showOptions)}>Toggle Skill Picker Display</p> : \"\";\n  \n  const skillPickers = showOptions ? (\n    <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", maxWidth: \"70rem\"}}>\n      {baseSkillPickers}\n      {expertSkillPickers}\n    </div>\n  ) : \"\";\n  \n  return (\n    <div className=\"\" >\n      <h2>\n        <span>\n          Character Type:\n          <select\n            style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n            value={charContext.characters[charId].baseCharData.characterType.name || \"\"}\n            onChange={ev => changeCharacterType(ev)}\n          >\n            {options}\n          </select>\n        </span>\n        {optionsToggler}\n      </h2>\n      {skillPickers}\n    </div>\n  );\n};\n\nexport default CharacterTypePicker;\n","import React, { useContext, useState, Fragment } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport TraitContext from \"../contexts/trait\";\n\nimport SkillPicker from \"./characterTypeSkillPicker\";\n\n\nconst CharacterTraitPicker = props => {\n  const [showOptions, setShowOptions] = useState(true); \n  const charContext = useContext(CharacterContext);\n  const traitContext = useContext(TraitContext);\n  const {traits} = traitContext;\n  const { charId } = useParams();\n  \n  if (!charContext.characters[charId]) return <div></div>;\n    \n  const selectedTrait = charContext.characters[charId].baseCharData.traitsList[props.index] ? traits[charContext.characters[charId].baseCharData.traitsList[props.index].name] : null;\n\n  const changeSelectedCharacterTrait = event => {\n    const trait = {name: event.target.value, options: traits[event.target.value].options};\n    charContext.setCharacterTrait(charId, props.index, trait);\n  };\n  \n  const defaultOptions = [<option disabled hidden style={{display: \"none\"}} value=\"\" key=\"default\">-- select a trait --</option>];\n    \n  const {availableTraits} = charContext.characters[charId].calculatedStats;\n  \n  if (selectedTrait && !availableTraits.some(trait => trait.id === selectedTrait.id)) defaultOptions.push(<option value={selectedTrait.id} key={selectedTrait.id}>{selectedTrait.displayName}</option>);\n  \n  const options = Object.keys(traits).length \n    ? defaultOptions.concat(availableTraits\n      .filter(eligibleTrait => {\n        if (traits[eligibleTrait.traitId].type === \"Character Type\") return false;\n        if (selectedTrait && traits[eligibleTrait.traitId].id === selectedTrait.id) return false;\n        return true;\n      })\n      .map(eligibleTrait => {\n        const {traitId} = eligibleTrait;\n        return <option key={traitId} value={traitId}>\n          {traits[traitId].displayName}\n        </option>;\n      }))\n    : [];\n\n  return (\n    <div className=\"\" >\n      <h3 style={{display: \"flex\", justifyContent: \"space-between\", maxWidth: \"80rem\"}}>\n        {options.length > 1 \n          ? <span>\n            <select\n              style={{ marginLeft: \"1rem\", fontSize: \"1.5rem\" }}\n              value={(selectedTrait && selectedTrait.id) || \"\"}\n              onChange={ev => changeSelectedCharacterTrait(ev)}\n            >\n              {options}\n            </select>\n          </span>\n          : <p>No traits available</p>\n        }\n      </h3>\n    </div>\n  );\n};\n\nexport default CharacterTraitPicker;\n","import React, { useContext } from \"react\";\nimport {useParams} from 'react-router-dom';\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport CharacterTraitPicker from \"./characterTraitPicker\";\n\n\nconst CharacterTraitsPicker = props => {\n  const context = useContext(CharacterContext);\n  const { charId } = useParams();\n  \n    \n  const character = context.characters[charId];\n  \n  if (!character || !character.calculatedStats) return <div></div>;\n\n  const traitEntitlements = character.calculatedStats.traitEntitlements || {};\n  \n  const traits = [...Array(traitEntitlements.total.allotted)].map((value, index) => <CharacterTraitPicker key={index} index={index} />);\n\n\n  return (\n    <div>\n      <div className=\"\" style={{display: \"flex\", justifyContent: \"space-between\", maxWidth: \"40rem\"}}>\n        <h2>Traits:</h2>\n        <div style={{display: \"flex\", justifyContent: \"space-around\", width: \"30rem\", alignItems: \"center\"}}>\n          <h4>Total: {traitEntitlements.total.consumed}/{traitEntitlements.total.allotted}</h4>\n          <h4>Heroic: {traitEntitlements.heroic.consumed}/{traitEntitlements.heroic.allotted}</h4>\n          <h4>Epic: {traitEntitlements.epic.consumed}/{traitEntitlements.epic.allotted}</h4>\n        </div>\n      </div>\n      {traits}\n    </div>\n  );\n};\n\nexport default CharacterTraitsPicker;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./character.css\";\nimport CharacterContext from \"../contexts/character\";\nimport CharacterNameField from \"./characterNameField\";\nimport CharacterLevelTracker from \"./characterLevelTracker\";\nimport CharacterStrainPicker from \"./characterStrainPicker\";\nimport CharacterAttributeMinMaxPicker from \"./characterAttributeMinMaxPicker\";\nimport CharacterTypePicker from \"./characterTypePicker\";\nimport CharacterTraitsPicker from \"./characterTraitsPicker\";\nimport CharacterSheet from \"../characterSheet/characterSheet\";\n\nconst CreateOrEditChar = props => {\n  const charContext = useContext(CharacterContext);\n  const { charId } = props.match.params;\n\n  useEffect(() => {\n    if (charId && !charContext.characters[charId]) charContext.initializeEmptyCharacter(charId);\n    else props.history.push(`/character/createOrEdit/${charContext.initializeEmptyCharacter()}`);\n  }, []);\n\n  return (\n    <div className=\"character__container\">\n      <div style={{display: \"flex\", justifyContent: \"flex-start\", maxWidth: \"73rem\", flexDirection: \"column\"}}>\n        <CharacterNameField /> \n        <CharacterLevelTracker />\n        <CharacterStrainPicker />\n        <CharacterAttributeMinMaxPicker />\n        <CharacterTypePicker />\n        <CharacterTraitsPicker />\n      </div>\n      <div style={{padding: \"0 0 0 2rem\", borderLeft: \"2px solid black\"}}>\n        <CharacterSheet {...props} />\n      </div>\n    </div>\n  );\n};\n\nexport default CreateOrEditChar;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass DataDisplayTitleSection extends Component {\n    render() {\n\n        return (\n            <div className=\"dataDisplay__title__container\">\n                <h1 className=\"dataDisplay__title\">{this.props.name}</h1>\n                <Link to={this.props.rulesLink} className=\"dataDisplay__docLink\">\n                    <h4>{this.props.name} Rules</h4>\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayTitleSection;\n","import React, {Component} from 'react';\n\nclass DataDisplayFilterField extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    changeFilter({field}) {\n        this.props.selectCheckmark(field);\n    }\n\n    shouldBeChecked(field) {\n        let filters = this.props.filters;\n        if (!filters[this.props.sort]) return false;\n        if (!filters[this.props.sort].some(elm => elm === field)) return false;\n        return true;\n    }\n\n    render() {\n        let fieldsList = !this.props.fields ? \"\" : (this.props.fields.filter(item => !!item).sort());\n\n        let options = !fieldsList ? [] : (\n            fieldsList.map((field, index) => {\n                return <div key={index}><input type=\"checkbox\" value={field} onChange={ev => this.changeFilter({field})} checked={this.shouldBeChecked(field)}/>{field}<br /></div>\n            })\n        )\n\n        let divCount = Math.ceil(options.length / 4);\n        if (divCount > 3) divCount = 3;\n        let divCountLength = Math.ceil(options.length/divCount);\n\n        let optionDivs = [];\n        for (let i = 0; i < divCount; i++) {\n            optionDivs.push(<div key={i} style={{width: `calc(100% / ${divCount})`, minWidth: `fit-content`}}>\n                {options.splice(0, divCountLength)}\n            </div>)\n        }\n\n        let padding = (10 * divCount + 2 * divCount) / 2;\n        return (\n            <div\n                className=\"dataDisplay__filter__checkBox\"\n                style={{width: this.props.width, minWidth: `fit-content`}}\n                >\n                <h5 style={{paddingLeft: `calc(50% - ${padding}rem)`}}>{this.props.name}</h5>\n                <div className=\"checkmark__container\" style={{paddingLeft: `calc(50% - ${padding}rem)`}}>{optionDivs}</div>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayFilterField;\n","import React, {Component} from 'react';\nimport FilterField from './dataDisplayFilterField.js';\n\nclass DataDisplayFilterSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchedName: \"\",\n            filters: {}\n        };\n    }\n\n    onChange(value) {\n        this.setState({searchedName: value}, () => this.props.updateFilters(this.state.searchedName));\n    }\n\n    resetFilters() {\n        this.setState({searchedName: \"\", filters: {}}, () => {\n            this.props.updateFilters(this.state.searchedName)\n            this.props.updateFilters(this.state.filters)\n        });\n    }\n\n    getFields(field) {\n        let data = this.props.data;\n        let array = [];\n        if (data) {\n            let keys = Object.keys(data);\n            keys.forEach(key => {\n                if (data[key][field] && data[key][field].length) {\n                    if (typeof data[key][field] === 'string') data[key][field] = [data[key][field]];\n\n                    data[key][field].forEach(item => {\n                        if (array.indexOf(item) !== -1) return;\n                        array.push(item);\n                    });\n                }\n                else {\n                    if (array.indexOf(\"none\") !== -1) return;\n                    array.unshift(\"none\");\n                }\n            });\n        }\n        return array;\n    }\n\n    selectCheckmark(name, field) {\n        let filters = this.state.filters;\n        if (!filters[field]) filters[field] = [];\n        if (filters[field].indexOf(name) === -1) filters[field].push(name);\n        else filters[field].splice(filters[field].indexOf(name), 1);\n        this.setState({filters: filters}, () => this.props.updateFilters(this.state.filters));\n    }\n\n    render() {\n        let width = 75 / this.props.filterableFields.length;\n        let filterFields = this.props.filterableFields.map(field => {\n            return (<FilterField\n                width={`${width}%`}\n                key={field.name}\n                name={field.name}\n                sort={field.sort}\n                fields={this.getFields(field.sort)}\n                filters={this.state.filters}\n                selectCheckmark={ev => this.selectCheckmark(ev, field.sort)}\n                />)\n            });\n\n\n\n            return (\n                <div className=\"dataDisplay__filter__container\">\n                    <div\n                        className=\"dataDisplay__filter__name\"\n                        style={{width: `25%`}}\n                        >\n                        <h5>{this.props.nameSingular} Name</h5>\n                        <input\n                            className=\"dataDisplay__filter__name__input\"\n                            type={\"text\"}\n                            placeholder={\"placeholder text\"}\n                            value={this.state.searchedName}\n                            onChange={ev => this.onChange(ev.target.value)}\n                            />\n                        <h6\n                            className=\"resetFilters__button\"\n                            onClick={ev => this.resetFilters()}\n                            >\n                            Reset All Filters\n                        </h6>\n                    </div>\n                    {filterFields}\n\n                </div>\n            )\n        }\n    }\n\n    export default DataDisplayFilterSection;\n","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\n\nclass DataDisplayListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: false\n         };\n    }\n\n    toggleExpanded = () => {\n        if (this.props.expandInPlace) this.setState({expanded: !this.state.expanded});\n        this.props.renderSelected(this.props.name);\n    }\n\n    render() {\n        let expandedClass = this.state.expanded ? \"expandedListDisplay\" : \"hidden\";\n        let plusMinus = this.state.expanded ? (faMinus) : (faPlus);\n        let expandedContent = this.props.renderedContent ? this.props.renderedContent : `<p>${this.props.data.description}</p>` || \"\";\n        let display = this.props.fields.map(field => {\n            let displayString = this.props.data[field.sort];\n            if (Array.isArray(displayString)) displayString = displayString.join(\" or \");\n            return (\n                <div key={field.sort} >{displayString}</div>\n            )\n        })\n        display.unshift(<div key=\"displayName\">{this.props.data.displayName}</div>)\n        return (\n            <div>\n                <li\n                    className=\"dataDisplay__list__table__row dataDisplay__list__item\">\n                    {display}\n                    <div onClick={ev => this.toggleExpanded()}><FontAwesomeIcon icon={plusMinus} /></div>\n                </li>\n                <div className={expandedClass}\n                >\n                    <div className=\"expandedListContent\" dangerouslySetInnerHTML={{__html: expandedContent}} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataDisplayListItem;\n","import React, {Component} from 'react';\nimport DataDisplayListItem from './dataDisplayListItem.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\n\nimport { observer, inject } from \"mobx-react\";\n\nconst DataDisplayListSection = inject(\"rootStore\")(observer (\nclass DataDisplayListSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: \"displayName\",\n            sortAssending: true,\n            displayDocumentation: \"\"\n         };\n    }\n\n    shouldComponentUpdate(nextprops, nextstate) {\n        return true;\n    }\n\n    sorter(a, b) {\n        let data = this.props.data;\n        let fieldA = data[a][this.state.sortBy].toString();\n        if (Array.isArray(fieldA)) fieldA = fieldA.join(\" \");\n        let fieldB = data[b][this.state.sortBy].toString();\n        if (Array.isArray(fieldB)) fieldB = fieldB.join(\" \");\n        let stringA = fieldA ? fieldA.toLowerCase() : \"\";\n        let stringB = fieldB ? fieldB.toLowerCase() : \"\";\n        if (!this.state.sortAssending) {\n            let placeholderA = stringA;\n            stringA = stringB;\n            stringB = placeholderA;\n        }\n        if (stringA < stringB) {\n          return -1;\n        }\n        if (stringA > stringB) {\n          return 1;\n        }\n      return 0;\n    }\n\n    sortBy(field) {\n        if (field === this.state.sortBy) this.setState({sortAssending: !this.state.sortAssending});\n        else this.setState({sortBy: field, sortAssending: true});\n    }\n\n    applyFilters(list) {\n        return list.filter(itemKey => {\n            let item = this.props.data[itemKey];\n            let filterFields = this.props.filterFields;\n            let filterName = this.props.filterName.toLowerCase();\n            if (filterName &&\n                !item.displayName.toLowerCase().includes(filterName)) {\n                    return false;\n            }\n            for (let field in filterFields) {\n                if (!item[field] || !filterFields[field].length) continue;\n                if (!item[field].some(elm => filterFields[field].includes(elm))) return false;\n            }\n            return true;\n        })\n    }\n\n    renderSelected(item) {\n        let extension = `${this.props.documentationExtension}${item}`;\n        if (this.state.displayDocumentation === extension) this.setState({displayDocumentation: \"\"});\n        else  this.setState({displayDocumentation: extension});\n\n    }\n\n    renderedDisplay() {\n        let className = this.props.fields.length > 2 ? \"hidden\" : \"placeholderText\"\n        if (this.state.displayDocumentation) return this.props.rootStore.rulesStore.rawDocs[this.state.displayDocumentation];\n        else return `<p class=\"${className}\">Please select an option from the left to display.</p>`;\n\n    }\n    render() {\n        let list = () => {\n            let data = this.props.data;\n            if (!data) return \"No Data Loaded.\";\n\n            let listHtml = Object.keys(data);\n\n            listHtml = this.applyFilters(listHtml);\n\n            listHtml.sort((a, b) => this.sorter(a, b));\n            listHtml = listHtml.map(dataKey => {\n               return (\n                   <DataDisplayListItem\n                       key={dataKey}\n                       name={dataKey}\n                       data={data[dataKey]}\n                       fields={this.props.fields}\n                       expandInPlace={this.props.fields.length > 1}\n                       renderSelected={ev => this.renderSelected(ev)}\n                       renderedContent={this.renderedDisplay()}\n                   />\n               );\n\n           });\n           if (listHtml.length) return listHtml;\n           else return (<p>Oh no! It looks like there are no results that match your filter selections.</p>)\n        }\n\n        let fields = [{name: `Name`, sort: `displayName`}].concat(this.props.fields).map(field => (<h5 key={field.name}>{field.name}<FontAwesomeIcon icon={faSort} className=\"sortIcon\" onClick={ev => this.sortBy(field.sort)}/></h5>));\n\n        let headerRow = (\n            <div className=\"dataDisplay__list__table__row dataDisplay__list__header\">\n                {fields}\n            </div>\n        )\n\n        let displayClass =  `dataDisplay__list__container dataDisplay__list__container__${this.props.fields.length + 2}`;\n\n        return (\n            <div className={displayClass}>\n\n                {headerRow}\n                <div className=\"dataDisplay__list__content__container\">\n                    <div>\n                        {list()}\n                    </div>\n                    <div  dangerouslySetInnerHTML={{__html: this.renderedDisplay()}} />\n                </div>\n            </div>\n        )\n    }\n}\n))\n\nexport default DataDisplayListSection;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './dataDisplay.css';\nimport DataDisplayTitleSection from './dataDisplayTitleSection.js';\nimport DataDisplayFilterSection from './dataDisplayFilterSection.js';\nimport DataDisplayListSection from './dataDisplayListSection.js';\n\nimport { observer, inject } from \"mobx-react\";\n\nconst DataDisplay = inject(\"rootStore\")(observer(\nclass DataDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterFields: {}\n    };\n  }\n\n  updateFilters(data) {\n    if (typeof data === \"string\") this.setState({filterName: data});\n    else this.setState({filterFields: data});\n  }\n\n  render() {\n    const filterDisplay = this.props.hideFilter ? \"\" : <DataDisplayFilterSection\n        nameSingular={this.props.nameSingular}\n        namePlural={this.props.namePlural}\n        filterableFields={this.props.filterableFields}\n        data={this.props.data}\n        updateFilters={ev => this.updateFilters(ev)}\n      />;\n\n    return (\n      <div className=\"dataDisplay__container\">\n        <DataDisplayTitleSection\n          name={this.props.namePlural}\n          rulesLink={this.props.rulesLink}\n        />\n      {filterDisplay}\n        <DataDisplayListSection\n          data={this.props.data}\n          fields={this.props.sortableFields}\n          filterName={this.state.filterName}\n          filterFields={this.state.filterFields}\n          documentationExtension={this.props.documentationExtension}\n        />\n      </div>\n    );\n  }\n}));\n\nexport default withRouter(DataDisplay);\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst CombatActions = inject(\"rootStore\")(observer (\nclass CombatActions extends Component {\n    render() {\n        let data = this.props.rootStore.combatActionsStore.combatActions;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Combat Action\"\n                nameSingular=\"Combat Actions\"\n                rulesLink=\"/rules/combat\"\n                sortableFields={[{name: \"Action Type\", sort: \"type\"}, {name: \"Action Point Cost\", sort: \"actionPointCost\"}, {name: \"Stamina Cost\", sort: \"staminaCost\"}]}\n                filterableFields={[{name: \"Action Type\", sort: \"type\"}]}\n            />\n        )\n    }\n}\n))\n\nexport default CombatActions;\n","import React, {Component} from 'react';\n\nclass SideBar extends Component {\n    render() {\n\n        return (\n            <div className=\"sideBar\">\n            <div style={{\"marginTop\": \"50%\"}}>\n            <p>Nothing Here Yet,</p>\n            <p>Content Coming Soon.</p>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom';\nimport './documentation.css';\nimport SideBar from './sideBar.js';\n\nimport { observer, inject } from \"mobx-react\";\n\n\nconst CoreRules = inject(\"rootStore\")(observer(\nclass CoreRules extends Component {\n\n\n    renderedDoc = () => {\n        // Get the location without the leading '/'\n        let location = this.props.location.pathname.toLowerCase().slice(1);\n        // If the location has a trailing '/' remove it too.\n        if (location.slice(-1) === '/') location = location.slice(0, -1);\n        // Return the documentation for the processed location.\n        return this.props.rootStore.rulesStore.rawDocs[location];\n    }\n\n    render() {\n        return (\n            <div className=\"coreRules__Container\">\n                <SideBar />\n                <div className=\"coreRules\" dangerouslySetInnerHTML={{__html: this.renderedDoc()}} />\n            </div>\n        );\n    }\n}\n))\n\nexport default withRouter(CoreRules);\n","import React, { Component } from 'react';\nimport './home.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <h1>Welcome</h1>\n                <p>This page will, with any luck, one day be home to vast stores of information about the world of Flax as I envision it. Still, for now, it's mostly a place for me to make homebrew RPG rules available to my friends, prospective players, and anyone who chances upon it.</p>\n                <h3>Join the discord</h3>\n                <p>If you're interested in chatting with me or other interested people about the world of Flax or its role-playing system, please feel free to join <a href=\"https://discord.gg/tG3bNFQ\">Flax's discord</a>.</p>\n                <h3>These rules aren't balanced</h3>\n                <p>If you're looking at the rules here, please be aware that this system is very much in the playtest phase of its existence and will have regular updates without warning. Once the system is more stable, I hope to maintain a patch history so anyone using the rules can quickly check for recent updates.</p>\n                <h3>Your table, your rules</h3>\n                <p>If you happen to be playing with these rules, I encourage you to change, update, expand, or ignore anything printed here to make it work for you. If you do, I'd love to hear all about what worked for you and what didn't. With any luck, we'll update the rules as presented here, making them better together.</p>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst SkillChecks = inject(\"rootStore\")(observer (\nclass SkillChecks extends Component {\n    render() {\n        let data = this.props.rootStore.skillChecksStore.skillChecks;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Skill Checks\"\n                nameSingular=\"Skill Check\"\n                rulesLink=\"/rules/skill checks\"\n                sortableFields={[{name: \"Primary Attribute\", sort: \"primaryAttribute\"}, {name: \"Primary Skill\", sort: \"primarySkill\"}, {name: \"Relevant Secondary Skills\", sort: \"relevantSecondarySkills\"}]}\n                filterableFields={[{name: \"Primary Attribute\", sort: \"primaryAttribute\"}, {name: \"Primary Skill\", sort: \"primarySkill\"}]}\n                documentationExtension=\"rules/skill checks/\"\n            />\n        )\n    }\n}\n))\n\nexport default SkillChecks;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst Strains = inject(\"rootStore\")(observer (\nclass Strains extends Component {\n    render() {\n        const data = this.props.rootStore.strainsStore.strains;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Strains\"\n                nameSingular=\"Strain\"\n                rulesLink=\"/rules/strains\"\n                sortableFields={[]}\n                filterableFields={[]}\n                hideFilter={true}\n                documentationExtension=\"rules/strains/\"\n            />\n        );\n    }\n}));\n\nexport default Strains;\n","import React, {Component} from 'react';\nimport DataDisplay from './dataDisplay.js';\nimport { observer, inject } from \"mobx-react\";\n\nconst Traits = inject(\"rootStore\")(observer (\nclass Traits extends Component {\n    render() {\n        let data = this.props.rootStore.traitsStore.traits;\n        return (\n            <DataDisplay\n                data={data}\n                namePlural=\"Traits\"\n                nameSingular=\"Trait\"\n                rulesLink=\"/rules/traits\"\n                sortableFields={[{name: \"Type\", sort: \"type\"}, {name: \"Keywords\", sort: \"keywords\"}, {name: \"Requirements\", sort: \"requirementsDescription\"}]}\n                filterableFields={[{name: \"Type\", sort: \"type\"}, {name: \"Keywords\", sort: \"keywords\"}]}\n            />\n        )\n    }\n}\n))\n\nexport default Traits;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport CharacterSheet from \"./characterSheet/characterSheet.js\";\nimport CreateOrEditChar from \"./character/createOrEditChar.js\";\nimport CombatActions from \"./dataDisplay/combatActions.js\";\nimport CoreRules from \"./documentation/coreRules.js\";\nimport Home from \"./home/home.js\";\nimport SkillChecks from \"./dataDisplay/skillChecks.js\";\nimport Strains from \"./dataDisplay/strains.js\";\nimport Traits from \"./dataDisplay/traits.js\";\n\nimport {CharacterContextProvider} from \"./contexts/character\";\nimport {SkillContextProvider} from \"./contexts/skill\";\nimport {StrainContextProvider} from \"./contexts/strain\";\nimport {TraitContextProvider} from \"./contexts/trait\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <CharacterContextProvider>\n        <SkillContextProvider>\n          <StrainContextProvider>\n            <TraitContextProvider>\n              <div id=\"route-controller\">\n                <Switch>\n                  <Route path=\"/rules\" component={CoreRules} />\n                  <Route path=\"/skill checks\" component={SkillChecks} />\n                  <Route path=\"/combat actions\" component={CombatActions} />\n                  <Route path=\"/strains\" component={Strains} />\n                  <Route path=\"/traits\" component={Traits} />\n                  <Route path=\"/character/sheet/:charId?\" component={CharacterSheet} />\n                  <Route path=\"/character/createoredit/:charId?\"\n                    component={CreateOrEditChar} />\n                  <Route exact path=\"/\" component={Home} />\n                </Switch>\n              </div>\n            </TraitContextProvider>\n          </StrainContextProvider>\n        </SkillContextProvider>\n      </CharacterContextProvider>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"header\">\n                <h1 className=\"header__title\"><Link to=\"/\" className=\"header__link\" >Flax</Link></h1>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass NavLink extends Component {\n  render() {\n    const link = `/${this.props.target}`;\n    return (\n      <li onMouseOver={() => this.props.onHover(this.props.title)}\n        onMouseOut={() => this.props.onHover(null)}><Link to={link}>{this.props.title}</Link>\n      </li>\n    );\n  }\n}\n\nexport default NavLink;\n","import React, {Component} from 'react';\nimport { observer, inject } from \"mobx-react\";\nimport { Link } from 'react-router-dom';\n\n\nconst ChapterList = inject(\"rootStore\")(observer(\nclass ChapterList extends Component {\n    render() {\n        let numberOfChapters = this.props.rootStore.rulesStore.chapterList.length;\n        let chapterNumberCutOff = Math.round(numberOfChapters/2);\n\n        let chaptersFirstHalf = [];\n        let chaptersSecondHalf = [];\n\n        this.props.rootStore.rulesStore.chapterList.forEach((title, index) => {\n            let link = `/rules/${title}`;\n            let returnValue = (\n                <Link to={link} key={title}\n                className=\"chapterLink hoverableNav\"\n                onClick={() => this.props.onHover(null)}>\n\n                    {title}\n                </Link>\n            )\n            if (index < chapterNumberCutOff)  chaptersFirstHalf.push(returnValue);\n            else chaptersSecondHalf.push(returnValue);\n        })\n        return (\n            <div className=\"chapterSectionsContainer\">\n                <div>{chaptersFirstHalf}</div>\n                <div>{chaptersSecondHalf}</div>\n            </div>\n        )\n    }\n}\n))\n\nexport default ChapterList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nclass ToolButton extends Component {\n    onClick = () => {\n        console.log('CLicked');\n    }\n    render() {\n\n        return (\n                <Link to={this.props.link} className=\"toolButton hoverableNav\" onClick={() => this.props.onHover(this.props.title)}>\n                    <h3>\n                        {this.props.name}\n                    </h3>\n                </Link>\n        )\n    }\n}\n\nexport default ToolButton;\n","import React, {Component} from 'react';\nimport ToolButton from './toolButton.js';\n\nclass RulesTools extends Component {\n    render() {\n\n        return (\n            <div className=\"rulesToolsContainer\">\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Strains\"\n                    link=\"/strains\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Traits\"\n                    link=\"/traits\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Skill Checks\"\n                    link=\"/skill checks\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Combat Actions\"\n                    link=\"/combat actions\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Equipment\"\n                    link=\"\"\n                />\n                <ToolButton\n                    onHover={this.props.onHover}\n                    name=\"Arcane Powers\"\n                    link=\"\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default RulesTools;\n","import React, {Component} from 'react';\nimport ChapterList from './chapterList.js';\nimport RulesTools from './rulesTools.js';\n\nclass ExtendedNav extends Component {\n    render() {\n        let hoveredClass = this.props.hoverDisplay === this.props.title ? \"extendedNav__container\" : \"hidden\";\n        // hoveredClass = \"extendedNav__container\"\n        return (\n            <div\n                className={hoveredClass}\n                onMouseOver={() => this.props.onHover(this.props.title)}\n                onMouseOut={() => this.props.onHover(null)}\n            >\n                <div className=\"extendedNav__items__container\">\n                    <ChapterList\n                        onHover={this.props.onHover} />\n                    <RulesTools\n                        onHover={this.props.onHover} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ExtendedNav;\n","import React, { Component } from \"react\";\nimport \"./topNav.css\";\nimport NavLink from \"./navLink.js\";\nimport ExtendedNav from \"./extendedNav.js\";\n\nclass TopNav extends Component {\n  state = {\n    hovering: null,\n    hoverDisplay: null\n  };\n\n  onHover = target => {\n    this.setState({ hovering: target }, () => {\n      if (target) this.setHoverDisplay();\n      else\n        setTimeout(() => {\n          this.setHoverDisplay();\n        }, 100);\n    });\n  };\n\n  setHoverDisplay = () => {\n    this.setState({ hoverDisplay: this.state.hovering });\n  };\n\n  render() {\n    return (\n      <div className=\"topNav\">\n        <ul className=\"topNav__list\">\n          <NavLink title=\"Rules\" target=\"rules\" onHover={this.onHover} />\n          <NavLink title=\"Character Sheet\" target=\"character/sheet\" onHover={this.onHover} />\n        </ul>\n        <ExtendedNav\n          hoverDisplay={this.state.hoverDisplay}\n          onHover={this.onHover}\n          title={\"Rules\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopNav;\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    rawDocs = {};\n    chapterList = [];\n    test = \"THIS IS A TEST STRING.\"\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/documentation');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.rawDocs = body.DOCUMENTATION;\n        this.chapterList = this.parseChapters(body.DOCUMENTATION)\n    };\n\n    parseChapters = documention => {\n        return Object.keys(documention)\n        .filter(key => key.split('/').length === 2)\n        .map(key => key.split('/')[1].split(\" \")\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \")\n    )\n}\n\n}\n\nexport default decorate(RulesStore, {\n    chapterList: observable,\n    rawDocs: observable,\n    test: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass CombatActionsStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    combatActions = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/combatactions');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.combatActions = body.CombatActions;\n    };\n}\n\nexport default decorate(CombatActionsStore, {\n    combatActions: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass SkillChecksStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    skillChecks = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/skillChecks');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.skillChecks = body.SkillChecks;\n    };\n}\n\nexport default decorate(SkillChecksStore, {\n    skillChecks: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    strains = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/strains');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.strains = body.Strains;\n    };\n}\n\nexport default decorate(RulesStore, {\n    strains: observable\n});\n","import { observable, decorate } from \"mobx\";\n\nclass RulesStore {\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.callDocumentationAPI();\n    }\n    traits = {};\n\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callDocumentationAPI = async () => {\n        const response = await fetch('/traits');\n        const body = await response.json();\n        if (response.status !== 200) {\n            throw Error(body.message)\n        }\n        this.traits = body.Traits;\n    };\n}\n\nexport default decorate(RulesStore, {\n    traits: observable\n});\n","import RulesStore from \"./rulesStore.js\";\nimport CombatActionsStore from \"./combatActionsStore.js\";\nimport SkillChecksStore from \"./skillChecksStore.js\";\nimport StrainsStore from \"./strainsStore.js\";\nimport TraitsStore from \"./traitsStore.js\";\n\nexport class RootStore {\n  constructor() {\n    this.rulesStore = new RulesStore(this);\n    this.combatActionsStore = new CombatActionsStore(this);\n    this.skillChecksStore = new SkillChecksStore(this);\n    this.strainsStore = new StrainsStore(this);\n    this.traitsStore = new TraitsStore(this);\n  }\n}\n\nconst rootStore = new RootStore();\n\nexport default rootStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Routes from \"./routes.js\";\nimport Header from \"./header/header.js\";\nimport TopNav from \"./topNav/topNav.js\";\n\nimport { Provider } from \"mobx-react\";\nimport rootStore from \"./stores/rootStore.js\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider rootStore={rootStore}>\n    <Router basename={\"/\"}>\n      <Header />\n      <TopNav />\n      <Routes />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}